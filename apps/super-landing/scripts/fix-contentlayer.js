#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å ContentLayer
 */

const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å ContentLayer...\n');

const contentDir = path.join(__dirname, '..', 'src', 'content');
const generatedDir = path.join(__dirname, '..', '.contentlayer', 'generated');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:');

if (!fs.existsSync(contentDir)) {
  console.log('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è content –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', contentDir);
  process.exit(1);
} else {
  console.log('‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è content –Ω–∞–π–¥–µ–Ω–∞');
}

// –°–æ–∑–¥–∞–µ–º .contentlayer –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!fs.existsSync(path.dirname(generatedDir))) {
  console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ .contentlayer –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...');
  fs.mkdirSync(path.dirname(generatedDir), { recursive: true });
}

if (!fs.existsSync(generatedDir)) {
  console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ .contentlayer/generated –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...');
  fs.mkdirSync(generatedDir, { recursive: true });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –±–ª–æ–≥–∞
const blogDir = path.join(contentDir, 'blog');
if (fs.existsSync(blogDir)) {
  console.log('‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è blog –Ω–∞–π–¥–µ–Ω–∞');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫–æ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  const locales = ['en', 'ru', 'es', 'hi', 'tr'];
  locales.forEach(locale => {
    const localeDir = path.join(blogDir, locale);
    if (fs.existsSync(localeDir)) {
      const files = fs.readdirSync(localeDir).filter(f => f.endsWith('.mdx'));
      console.log(`   ${locale}: ${files.length} —Ñ–∞–π–ª–æ–≤`);
    }
  });
} else {
  console.log('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è blog –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

// –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
const blogIndexPath = path.join(generatedDir, 'Blog', '_index.json');
const blogIndexDir = path.dirname(blogIndexPath);

if (!fs.existsSync(blogIndexDir)) {
  console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Blog...');
  fs.mkdirSync(blogIndexDir, { recursive: true });
}

if (!fs.existsSync(blogIndexPath)) {
  console.log('üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ _index.json...');
  fs.writeFileSync(blogIndexPath, JSON.stringify([], null, 2));
  console.log('‚úÖ _index.json —Å–æ–∑–¥–∞–Ω');
} else {
  console.log('‚úÖ _index.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}

console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ contentlayer2 –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ MDX —Ñ–∞–π–ª—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à: pnpm clean-cache');
console.log('4. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: pnpm build');

console.log('\nüöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
console.log('cd apps/super-landing');
console.log('pnpm clean-cache');
console.log('pnpm build'); 