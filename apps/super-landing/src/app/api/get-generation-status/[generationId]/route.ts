import type { NextRequest } from "next/server";
import { NextResponse } from "next/server";
import { getSuperduperAIConfig } from "@/lib/config/superduperai";

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ generationId: string }> }
) {
  try {
    const { generationId } = await params;
    const config = getSuperduperAIConfig();

    // –ü–æ–ª—É—á–∞–µ–º fileId –∏–∑ generationId
    // –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ generationId —ç—Ç–æ fileId –∏–∑ SuperDuperAI
    const fileId = generationId;

    console.log(`üîÑ Checking status for file: ${fileId}`);

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–∞ –∏–∑ SuperDuperAI API
      const response = await fetch(`${config.url}/api/v1/file/${fileId}`, {
        method: "GET",
        headers: {
          Authorization: `Bearer ${config.token}`,
          "User-Agent": "SuperDuperAI-Landing/1.0",
        },
      });

      if (!response.ok) {
        console.error(`‚ùå Failed to get file status: ${response.status}`);

        // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (404), –æ–Ω –º–æ–∂–µ—Ç –µ—â–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        if (response.status === 404) {
          return NextResponse.json({
            status: "in_progress",
            progress: 50,
            message: "File not found - may still be processing",
            estimatedTime: 30,
          });
        }

        // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º in_progress
        return NextResponse.json({
          status: "in_progress",
          progress: 50,
          message: "Checking generation status...",
          estimatedTime: 30,
        });
      }

      const fileData = await response.json();
      console.log(`üìÅ File ${fileId} status:`, fileData);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ —Ñ–∞–π–ª
      if (fileData.url) {
        // –§–∞–π–ª –≥–æ—Ç–æ–≤
        return NextResponse.json({
          status: "completed",
          result: {
            videoUrl: fileData.url,
            thumbnailUrl: fileData.thumbnail_url,
            duration: fileData.duration,
            width: fileData.video_generation?.width ?? 1280,
            height: fileData.video_generation?.height ?? 720,
          },
        });
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
      if (fileData.tasks && fileData.tasks.length > 0) {
        const latestTask = fileData.tasks[fileData.tasks.length - 1];

        if (latestTask.status === "error") {
          return NextResponse.json({
            status: "failed",
            error: "File generation failed",
          });
        }

        if (latestTask.status === "in_progress") {
          return NextResponse.json({
            status: "in_progress",
            progress: 75,
            message: "Generating video...",
            estimatedTime: 15,
          });
        }

        if (latestTask.status === "completed") {
          // –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ URL –µ—â–µ –Ω–µ—Ç, —Ñ–∞–π–ª –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
          return NextResponse.json({
            status: "in_progress",
            progress: 90,
            message: "Finalizing video...",
            estimatedTime: 5,
          });
        }
      }

      // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–¥–∞—á –∏–ª–∏ –æ–Ω–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã, —Ñ–∞–π–ª –≤—Å–µ –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
      return NextResponse.json({
        status: "in_progress",
        progress: 50,
        message: "Processing video...",
        estimatedTime: 30,
      });
    } catch (error) {
      console.error("Error getting file status from SuperDuperAI:", error);

      // Fallback –∫ –∑–∞–≥–ª—É—à–∫–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
      return NextResponse.json({
        status: "in_progress",
        progress: 50,
        message: "Checking generation status...",
        estimatedTime: 30,
      });
    }
  } catch (error) {
    console.error("Error getting generation status:", error);
    return NextResponse.json(
      { error: "Failed to get generation status" },
      { status: 500 }
    );
  }
}
