#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∏–º–ø–æ—Ä—Ç–æ–≤ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
 */

const fs = require('fs');
const path = require('path');

// –ú–∞–ø–ø–∏–Ω–≥ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∏–º–ø–æ—Ä—Ç–æ–≤
const REMAINING_IMPORTS = {
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ (—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
  '@/components/ui/optimized-link': 'LOCAL',
  '@/components/ui/analytics-providers': 'LOCAL',
  '@/components/ui/icons': 'LOCAL',
  '@/components/ui/safe-icon': 'LOCAL',
  '@/components/ui/accordion': 'LOCAL',
  '@/components/ui/breadcrumbs': 'LOCAL',
  '@/components/ui/veo3-payment-buttons': 'LOCAL',
  '@/components/ui/code-block': 'LOCAL',
  '@/components/ui/logo': 'LOCAL',
  '@/components/ui/dropdown-menu': 'LOCAL',
  '@/components/ui/sidebar': 'LOCAL',
  '@/components/ui/tooltip': 'LOCAL',
  '@/components/ui/dialog': 'LOCAL',
  '@/components/ui/skeleton': 'LOCAL',
  '@/components/ui/table': 'LOCAL',
  '@/components/ui/image-uploader': 'LOCAL',
  '@/components/ui/switch': 'LOCAL',
  '@/components/ui/moodboard-uploader': 'LOCAL',
  '@/components/ui/select': 'LOCAL',
};

function walkDirectory(dir, callback) {
  const files = fs.readdirSync(dir);
  
  for (const file of files) {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    
    if (stat.isDirectory() && !file.startsWith('.') && file !== 'node_modules') {
      walkDirectory(filePath, callback);
    } else if (stat.isFile() && /\.(ts|tsx|js|jsx)$/.test(file)) {
      callback(filePath);
    }
  }
}

function fixRemainingImports(content, filePath) {
  let modified = false;
  let newContent = content;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–º–ø–æ—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
  for (const [oldPath, action] of Object.entries(REMAINING_IMPORTS)) {
    const importRegex = new RegExp(`import\\s+([^;]+)\\s+from\\s+['"]${oldPath.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}['"];?`, 'g');
    const destructureRegex = new RegExp(`import\\s*{([^}]+)}\\s+from\\s+['"]${oldPath.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}['"];?`, 'g');
    
    if (importRegex.test(newContent) || destructureRegex.test(newContent)) {
      // –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–º, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
      if (action === 'LOCAL') {
        const componentPath = path.join(process.cwd(), oldPath.replace('@/', '')) + '.tsx';
        if (!fs.existsSync(componentPath)) {
          console.log(`  ‚ö†Ô∏è  –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${oldPath} –≤ ${path.relative(process.cwd(), filePath)}`);
        }
      }
    }
  }
  
  return newContent;
}

function main() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∏–º–ø–æ—Ä—Ç—ã...\n');
  
  const apps = ['apps/super-landing', 'apps/super-chatbot'];
  let totalChecked = 0;
  
  for (const app of apps) {
    if (fs.existsSync(app)) {
      console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º: ${app}`);
      let appChecked = 0;
      
      walkDirectory(app, (filePath) => {
        try {
          const content = fs.readFileSync(filePath, 'utf8');
          fixRemainingImports(content, filePath);
          appChecked++;
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filePath}:`, error.message);
        }
      });
      
      console.log(`  üìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${appChecked}\n`);
      totalChecked += appChecked;
    }
  }
  
  console.log(`üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${totalChecked}`);
  console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  console.log('1. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –ø–æ–º–µ—Ç–∫–æ–π "LOCAL" –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π');
  console.log('2. –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –µ–≥–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏–º–ø–æ—Ä—Ç');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ @turbo-super/ui, @turbo-super/shared, @turbo-super/data —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
}

if (require.main === module) {
  main();
} 