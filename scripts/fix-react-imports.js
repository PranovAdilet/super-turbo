#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const glob = require('glob');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ React –≤ —Ñ–∞–π–ª–µ
function fixReactImport(filePath) {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    let modified = false;

    // –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ React —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞–º–∏
    const reactImportPattern = /import React, ({[^}]+}) from ['"]react['"];?/g;
    
    content = content.replace(reactImportPattern, (match, namedImports) => {
      modified = true;
      return `import { ${namedImports} } from 'react';`;
    });

    // –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ –∏–º–ø–æ—Ä—Ç–∞ React –±–µ–∑ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–æ—Ä—Ç–æ–≤
    const reactOnlyPattern = /import React from ['"]react['"];?/g;
    
    content = content.replace(reactOnlyPattern, (match) => {
      modified = true;
      return '';
    });

    if (modified) {
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${filePath}`);
      return true;
    }
    
    return false;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filePath}:`, error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ React...\n');

  // –ü–æ–∏—Å–∫ –≤—Å–µ—Ö TypeScript/TSX —Ñ–∞–π–ª–æ–≤
  const patterns = [
    'apps/**/*.tsx',
    'apps/**/*.ts',
    'packages/**/*.tsx',
    'packages/**/*.ts'
  ];

  let totalFiles = 0;
  let fixedFiles = 0;

  patterns.forEach(pattern => {
    const files = glob.sync(pattern, { ignore: ['**/node_modules/**', '**/dist/**', '**/build/**'] });
    
    files.forEach(file => {
      totalFiles++;
      if (fixReactImport(file)) {
        fixedFiles++;
      }
    });
  });

  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
  console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${totalFiles}`);
  console.log(`   –§–∞–π–ª–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${fixedFiles}`);
  
  if (fixedFiles > 0) {
    console.log('\n‚úÖ –ò–º–ø–æ—Ä—Ç—ã React —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
  } else {
    console.log('\n‚ÑπÔ∏è  –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã React —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.');
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main();
}

module.exports = { fixReactImport }; 