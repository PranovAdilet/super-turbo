{"version":3,"sources":["../src/veo3-tools/translations/en.json","../src/veo3-tools/translations/ru.json","../src/veo3-tools/translations/tr.json","../src/veo3-tools/translations/es.json","../src/veo3-tools/translations/hi.json","../src/veo3-tools/translations/index.ts","../src/veo3-tools/hooks/use-translation.ts","../src/veo3-tools/components/MoodboardUploader.tsx","../src/veo3-tools/components/PromptBuilder.tsx","../src/veo3-tools/components/PromptPreview.tsx","../src/veo3-tools/components/AIEnhancement.tsx","../src/veo3-tools/components/PromptHistory.tsx","../src/veo3-tools/utils/index.ts","../src/veo3-tools/constants/index.ts","../src/veo3-tools/components/Veo3PromptGenerator.tsx","../src/veo3-tools/types/index.ts"],"names":["MoodboardUploader","jsxs","Card","jsx","CardHeader","CardTitle","CardContent","Label","Badge","copyToClipboard","Textarea","Button","Trash2","Sparkles","Copy","Fragment","localeToLanguage","enhancedPrompt","promptData"],"mappings":"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","file":"index.mjs","sourcesContent":["{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"Master VEO3 Video Generation\",\r\n      \"description\": \"Learn professional prompting techniques and best practices for Google's most advanced AI video model.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Prompt Builder\",\r\n      \"enhance\": \"AI Enhancement\",\r\n      \"history\": \"History\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Scene\",\r\n      \"scenePlaceholder\": \"Describe the setting, environment, or location...\",\r\n      \"style\": \"Style\",\r\n      \"stylePlaceholder\": \"Artistic, photorealistic, cinematic, etc...\",\r\n      \"camera\": \"Camera\",\r\n      \"cameraPlaceholder\": \"Camera movement, angle, shot type...\",\r\n      \"characters\": \"Characters\",\r\n      \"addCharacter\": \"Add Character\",\r\n      \"characterName\": \"Name\",\r\n      \"characterNamePlaceholder\": \"Character name (e.g., Sarah, Vendor)\",\r\n      \"characterDescription\": \"Description\",\r\n      \"characterDescriptionPlaceholder\": \"Describe the character (e.g., A young woman with wavy brown hair)\",\r\n      \"characterSpeech\": \"Speech/Dialogue\",\r\n      \"characterSpeechPlaceholder\": \"What they say (e.g., Hello there! or Привет!)\",\r\n      \"characterNumber\": \"Character\",\r\n      \"hasVoice\": \"Has Voice\",\r\n      \"voiceHighlight\": \"This dialogue will be highlighted in the enhanced prompt\",\r\n      \"removeCharacter\": \"Remove\",\r\n      \"action\": \"Action\",\r\n      \"actionPlaceholder\": \"What's happening in the scene...\",\r\n      \"lighting\": \"Lighting\",\r\n      \"lightingPlaceholder\": \"Natural, dramatic, soft, etc...\",\r\n      \"mood\": \"Mood\",\r\n      \"moodPlaceholder\": \"Emotional atmosphere, tone...\",\r\n      \"language\": \"Language\",\r\n      \"languagePlaceholder\": \"Enter language (e.g., English, Russian, Spanish...)\",\r\n      \"quickSelect\": \"Quick select:\",\r\n      \"moodboard\": \"Moodboard\",\r\n      \"moodboardEnabled\": \"Enable moodboard\",\r\n      \"moodboardDescription\": \"Upload reference images to guide generation\",\r\n      \"noCharacters\": \"No characters added yet. Click \\\"Add Character\\\" to start.\",\r\n      \"moodboardTitle\": \"Enable Moodboard References\",\r\n      \"moodboardImages\": \"0/3 images\",\r\n      \"visualReferences\": \"Visual References\",\r\n      \"uploadImages\": \"📁 Click to Upload Images\",\r\n      \"uploadDescription\": \"Select up to 3 images to use as visual references\",\r\n      \"supportedFormats\": \"Supported formats: JPG, PNG, GIF, WebP\",\r\n      \"moodboardTips\": \"🎨 Moodboard Tips\",\r\n      \"tip1\": \"Upload reference images to influence your VEO3 generation\",\r\n      \"tip2\": \"Add descriptions to highlight specific elements you want emphasized\",\r\n      \"tip3\": \"Adjust influence weight to control how much each image affects the result\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Generated Prompt\",\r\n      \"copyButton\": \"Copy\",\r\n      \"copied\": \"Copied!\",\r\n      \"randomizeButton\": \"Randomize\",\r\n      \"clearButton\": \"Clear All\",\r\n      \"enhanceButton\": \"Continue to AI Enhancement →\",\r\n      \"placeholder\": \"Your generated prompt will appear here, or type your own prompt...\",\r\n      \"preview\": \"Preview\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI Enhancement\",\r\n      \"description\": \"Enhance your prompt with advanced AI techniques\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Character Focus\",\r\n        \"action\": \"Action Focus\", \r\n        \"cinematic\": \"Cinematic Focus\",\r\n        \"safe\": \"Safe Content\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Enhancement Settings\",\r\n        \"characterLimit\": \"Character Limit\",\r\n        \"includeAudio\": \"Include Audio Description\",\r\n        \"model\": \"AI Model\"\r\n      },\r\n      \"enhanceButton\": \"Enhance Prompt\",\r\n      \"enhancing\": \"Enhancing...\",\r\n      \"enhanceError\": \"Enhancement failed\",\r\n             \"enhancementInfo\": {\r\n         \"model\": \"Model\",\r\n         \"length\": \"Length\",\r\n         \"actualCharacters\": \"Actual Characters\",\r\n         \"targetCharacters\": \"Target Characters\"\r\n       },\r\n       \"focus\": \"focus\"\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"Prompt History\",\r\n      \"empty\": \"No prompts in history yet\",\r\n      \"loadButton\": \"Load\",\r\n      \"clearButton\": \"Clear History\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Date\",\r\n        \"basicPrompt\": \"Basic Prompt\",\r\n        \"enhancedPrompt\": \"Enhanced Prompt\",\r\n        \"length\": \"Length\",\r\n        \"model\": \"Model\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Loading...\",\r\n      \"error\": \"Error\",\r\n      \"success\": \"Success\",\r\n      \"cancel\": \"Cancel\",\r\n      \"save\": \"Save\",\r\n      \"delete\": \"Delete\",\r\n      \"edit\": \"Edit\",\r\n      \"close\": \"Close\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"Освойте генерацию видео VEO3\",\r\n      \"description\": \"Изучите профессиональные техники промптинга и лучшие практики для самой продвинутой AI-модели видео от Google.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Конструктор промптов\",\r\n      \"enhance\": \"AI-улучшение\",\r\n      \"history\": \"История\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Сцена\",\r\n      \"scenePlaceholder\": \"Опишите обстановку, окружение или место действия...\",\r\n      \"style\": \"Стиль\",\r\n      \"stylePlaceholder\": \"Художественный, фотореалистичный, кинематографичный и т.д...\",\r\n      \"camera\": \"Камера\",\r\n      \"cameraPlaceholder\": \"Движение камеры, угол, тип кадра...\",\r\n      \"characters\": \"Персонажи\",\r\n      \"addCharacter\": \"Добавить персонажа\",\r\n      \"characterName\": \"Имя\",\r\n      \"characterNamePlaceholder\": \"Имя персонажа (например, Сара, Продавец)\",\r\n      \"characterDescription\": \"Описание\",\r\n      \"characterDescriptionPlaceholder\": \"Опишите персонажа (например, Молодая женщина с волнистыми каштановыми волосами)\",\r\n      \"characterSpeech\": \"Речь/Диалог\",\r\n      \"characterSpeechPlaceholder\": \"Что они говорят (например, Привет! или Hello!)\",\r\n      \"characterNumber\": \"Персонаж\",\r\n      \"hasVoice\": \"Есть голос\",\r\n      \"voiceHighlight\": \"Этот диалог будет выделен в улучшенном промпте\",\r\n      \"removeCharacter\": \"Удалить\",\r\n      \"action\": \"Действие\",\r\n      \"actionPlaceholder\": \"Что происходит в сцене...\",\r\n      \"lighting\": \"Освещение\",\r\n      \"lightingPlaceholder\": \"Естественное, драматичное, мягкое и т.д...\",\r\n      \"mood\": \"Настроение\",\r\n      \"moodPlaceholder\": \"Эмоциональная атмосфера, тон...\",\r\n      \"language\": \"Язык\",\r\n      \"languagePlaceholder\": \"Введите язык (например, Английский, Русский, Испанский...)\",\r\n      \"quickSelect\": \"Быстрый выбор:\",\r\n      \"moodboard\": \"Мудборд\",\r\n      \"moodboardEnabled\": \"Включить мудборд\",\r\n      \"moodboardDescription\": \"Загрузите референсные изображения для направления генерации\",\r\n      \"noCharacters\": \"Персонажи еще не добавлены. Нажмите «Добавить персонажа», чтобы начать.\",\r\n      \"moodboardTitle\": \"Включить мудборд\",\r\n      \"moodboardImages\": \"0/3 изображений\",\r\n      \"visualReferences\": \"Визуальные ссылки\",\r\n      \"uploadImages\": \"📁 Нажмите для загрузки изображений\",\r\n      \"uploadDescription\": \"Выберите до 3 изображений для использования в качестве визуальных ссылок\",\r\n      \"supportedFormats\": \"Поддерживаемые форматы: JPG, PNG, GIF, WebP\",\r\n      \"moodboardTips\": \"🎨 Советы по мудборду\",\r\n      \"tip1\": \"Загрузите референсные изображения для влияния на генерацию VEO3\",\r\n      \"tip2\": \"Добавьте описания для выделения конкретных элементов, которые хотите подчеркнуть\",\r\n      \"tip3\": \"Настройте вес влияния для контроля того, насколько каждое изображение влияет на результат\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Сгенерированный промпт\",\r\n      \"copyButton\": \"Копировать\",\r\n      \"copied\": \"Скопировано!\",\r\n      \"randomizeButton\": \"Случайно\",\r\n      \"clearButton\": \"Очистить всё\",\r\n      \"enhanceButton\": \"Продолжить к AI-улучшению →\",\r\n      \"placeholder\": \"Ваш сгенерированный промпт появится здесь, или введите свой собственный промпт...\",\r\n      \"preview\": \"Предварительный просмотр\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI-улучшение\",\r\n      \"description\": \"Улучшите ваш промпт с помощью продвинутых AI-техник\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Фокус на персонажах\",\r\n        \"action\": \"Фокус на действии\",\r\n        \"cinematic\": \"Кинематографический фокус\",\r\n        \"safe\": \"Безопасный контент\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Настройки улучшения\",\r\n        \"characterLimit\": \"Лимит символов\",\r\n        \"includeAudio\": \"Включить описание аудио\",\r\n        \"model\": \"AI-модель\"\r\n      },\r\n      \"enhanceButton\": \"Улучшить промпт\",\r\n      \"enhancing\": \"Улучшение...\",\r\n      \"enhanceError\": \"Ошибка улучшения\",\r\n             \"enhancementInfo\": {\r\n         \"model\": \"Модель\",\r\n         \"length\": \"Длина\",\r\n         \"actualCharacters\": \"Фактическое количество символов\",\r\n         \"targetCharacters\": \"Целевое количество символов\"\r\n       },\r\n       \"focus\": \"фокус\"\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"История промптов\",\r\n      \"empty\": \"История промптов пока пуста\",\r\n      \"loadButton\": \"Загрузить\",\r\n      \"clearButton\": \"Очистить историю\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Дата\",\r\n        \"basicPrompt\": \"Базовый промпт\",\r\n        \"enhancedPrompt\": \"Улучшенный промпт\",\r\n        \"length\": \"Длина\",\r\n        \"model\": \"Модель\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Загрузка...\",\r\n      \"error\": \"Ошибка\",\r\n      \"success\": \"Успешно\",\r\n      \"cancel\": \"Отмена\",\r\n      \"save\": \"Сохранить\",\r\n      \"delete\": \"Удалить\",\r\n      \"edit\": \"Редактировать\",\r\n      \"close\": \"Закрыть\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"VEO3 Video Üretiminde Uzmanlaşın\",\r\n      \"description\": \"Google'ın en gelişmiş AI video modeli için profesyonel prompt tekniklerini ve en iyi uygulamaları öğrenin.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Prompt Oluşturucu\",\r\n      \"enhance\": \"AI Geliştirme\",\r\n      \"history\": \"Geçmiş\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Sahne\",\r\n      \"scenePlaceholder\": \"Ortamı, çevreyi veya konumu açıklayın...\",\r\n      \"style\": \"Stil\",\r\n      \"stylePlaceholder\": \"Sanatsal, foto-gerçekçi, sinematik, vb...\",\r\n      \"camera\": \"Kamera\",\r\n      \"cameraPlaceholder\": \"Kamera hareketi, açı, çekim türü...\",\r\n      \"characters\": \"Karakterler\",\r\n      \"addCharacter\": \"Karakter Ekle\",\r\n      \"characterName\": \"İsim\",\r\n      \"characterDescription\": \"Açıklama\",\r\n      \"characterSpeech\": \"Konuşma/Diyalog\",\r\n      \"removeCharacter\": \"Kaldır\",\r\n      \"action\": \"Aksiyon\",\r\n      \"actionPlaceholder\": \"Sahnede ne oluyor...\",\r\n      \"lighting\": \"Aydınlatma\",\r\n      \"lightingPlaceholder\": \"Doğal, dramatik, yumuşak, vb...\",\r\n      \"mood\": \"Ruh Hali\",\r\n      \"moodPlaceholder\": \"Duygusal atmosfer, ton...\",\r\n      \"language\": \"Dil\",\r\n      \"moodboard\": \"Moodboard\",\r\n      \"moodboardEnabled\": \"Moodboard'u etkinleştir\",\r\n      \"moodboardDescription\": \"Üretimi yönlendirmek için referans görseller yükleyin\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Oluşturulan Prompt\",\r\n      \"copyButton\": \"Kopyala\",\r\n      \"copied\": \"Kopyalandı!\",\r\n      \"randomizeButton\": \"Rastgele\",\r\n      \"clearButton\": \"Tümünü Temizle\",\r\n      \"enhanceButton\": \"AI ile Geliştir\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI Geliştirme\",\r\n      \"description\": \"Prompt'unuzu gelişmiş AI teknikleriyle geliştirin\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Karakter Odaklı\",\r\n        \"action\": \"Aksiyon Odaklı\",\r\n        \"cinematic\": \"Sinematik Odak\",\r\n        \"safe\": \"Güvenli İçerik\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Geliştirme Ayarları\",\r\n        \"characterLimit\": \"Karakter Limiti\",\r\n        \"includeAudio\": \"Ses Açıklamasını Dahil Et\",\r\n        \"model\": \"AI Modeli\"\r\n      },\r\n      \"enhanceButton\": \"Prompt'u Geliştir\",\r\n      \"enhancing\": \"Geliştiriliyor...\",\r\n      \"enhanceError\": \"Geliştirme başarısız\",\r\n      \"enhancementInfo\": {\r\n        \"model\": \"Model\",\r\n        \"length\": \"Uzunluk\",\r\n        \"actualCharacters\": \"Gerçek Karakterler\",\r\n        \"targetCharacters\": \"Hedef Karakterler\"\r\n      }\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"Prompt Geçmişi\",\r\n      \"empty\": \"Henüz prompt geçmişi yok\",\r\n      \"loadButton\": \"Yükle\",\r\n      \"clearButton\": \"Geçmişi Temizle\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Tarih\",\r\n        \"basicPrompt\": \"Temel Prompt\",\r\n        \"enhancedPrompt\": \"Geliştirilmiş Prompt\",\r\n        \"length\": \"Uzunluk\",\r\n        \"model\": \"Model\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Yükleniyor...\",\r\n      \"error\": \"Hata\",\r\n      \"success\": \"Başarılı\",\r\n      \"cancel\": \"İptal\",\r\n      \"save\": \"Kaydet\",\r\n      \"delete\": \"Sil\",\r\n      \"edit\": \"Düzenle\",\r\n      \"close\": \"Kapat\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"Domina la Generación de Video VEO3\",\r\n      \"description\": \"Aprende técnicas profesionales de prompting y mejores prácticas para el modelo de video AI más avanzado de Google.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Constructor de Prompts\",\r\n      \"enhance\": \"Mejora con AI\",\r\n      \"history\": \"Historial\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Escena\",\r\n      \"scenePlaceholder\": \"Describe el entorno, ambiente o ubicación...\",\r\n      \"style\": \"Estilo\",\r\n      \"stylePlaceholder\": \"Artístico, fotorrealista, cinematográfico, etc...\",\r\n      \"camera\": \"Cámara\",\r\n      \"cameraPlaceholder\": \"Movimiento de cámara, ángulo, tipo de toma...\",\r\n      \"characters\": \"Personajes\",\r\n      \"addCharacter\": \"Agregar Personaje\",\r\n      \"characterName\": \"Nombre\",\r\n      \"characterDescription\": \"Descripción\",\r\n      \"characterSpeech\": \"Habla/Diálogo\",\r\n      \"removeCharacter\": \"Eliminar\",\r\n      \"action\": \"Acción\",\r\n      \"actionPlaceholder\": \"¿Qué está pasando en la escena...\",\r\n      \"lighting\": \"Iluminación\",\r\n      \"lightingPlaceholder\": \"Natural, dramática, suave, etc...\",\r\n      \"mood\": \"Estado de Ánimo\",\r\n      \"moodPlaceholder\": \"Atmósfera emocional, tono...\",\r\n      \"language\": \"Idioma\",\r\n      \"moodboard\": \"Moodboard\",\r\n      \"moodboardEnabled\": \"Habilitar moodboard\",\r\n      \"moodboardDescription\": \"Sube imágenes de referencia para guiar la generación\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Prompt Generado\",\r\n      \"copyButton\": \"Copiar\",\r\n      \"copied\": \"¡Copiado!\",\r\n      \"randomizeButton\": \"Aleatorizar\",\r\n      \"clearButton\": \"Limpiar Todo\",\r\n      \"enhanceButton\": \"Mejorar con AI\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"Mejora con AI\",\r\n      \"description\": \"Mejora tu prompt con técnicas avanzadas de AI\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Enfoque en Personajes\",\r\n        \"action\": \"Enfoque en Acción\",\r\n        \"cinematic\": \"Enfoque Cinematográfico\",\r\n        \"safe\": \"Contenido Seguro\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Configuración de Mejora\",\r\n        \"characterLimit\": \"Límite de Caracteres\",\r\n        \"includeAudio\": \"Incluir Descripción de Audio\",\r\n        \"model\": \"Modelo AI\"\r\n      },\r\n      \"enhanceButton\": \"Mejorar Prompt\",\r\n      \"enhancing\": \"Mejorando...\",\r\n      \"enhanceError\": \"La mejora falló\",\r\n      \"enhancementInfo\": {\r\n        \"model\": \"Modelo\",\r\n        \"length\": \"Longitud\",\r\n        \"actualCharacters\": \"Caracteres Reales\",\r\n        \"targetCharacters\": \"Caracteres Objetivo\"\r\n      }\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"Historial de Prompts\",\r\n      \"empty\": \"Aún no hay prompts en el historial\",\r\n      \"loadButton\": \"Cargar\",\r\n      \"clearButton\": \"Limpiar Historial\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Fecha\",\r\n        \"basicPrompt\": \"Prompt Básico\",\r\n        \"enhancedPrompt\": \"Prompt Mejorado\",\r\n        \"length\": \"Longitud\",\r\n        \"model\": \"Modelo\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Cargando...\",\r\n      \"error\": \"Error\",\r\n      \"success\": \"Éxito\",\r\n      \"cancel\": \"Cancelar\",\r\n      \"save\": \"Guardar\",\r\n      \"delete\": \"Eliminar\",\r\n      \"edit\": \"Editar\",\r\n      \"close\": \"Cerrar\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"VEO3 वीडियो जनरेशन में महारत हासिल करें\",\r\n      \"description\": \"Google के सबसे उन्नत AI वीडियो मॉडल के लिए पेशेवर प्रॉम्प्टिंग तकनीकों और सर्वोत्तम प्रथाओं को सीखें।\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"प्रॉम्प्ट बिल्डर\",\r\n      \"enhance\": \"AI एन्हांसमेंट\",\r\n      \"history\": \"इतिहास\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"दृश्य\",\r\n      \"scenePlaceholder\": \"सेटिंग, वातावरण या स्थान का वर्णन करें...\",\r\n      \"style\": \"शैली\",\r\n      \"stylePlaceholder\": \"कलात्मक, फोटोरियलिस्टिक, सिनेमैटिक, आदि...\",\r\n      \"camera\": \"कैमरा\",\r\n      \"cameraPlaceholder\": \"कैमरा आंदोलन, कोण, शॉट प्रकार...\",\r\n      \"characters\": \"पात्र\",\r\n      \"addCharacter\": \"पात्र जोड़ें\",\r\n      \"characterName\": \"नाम\",\r\n      \"characterDescription\": \"विवरण\",\r\n      \"characterSpeech\": \"भाषण/संवाद\",\r\n      \"removeCharacter\": \"हटाएं\",\r\n      \"action\": \"कार्रवाई\",\r\n      \"actionPlaceholder\": \"दृश्य में क्या हो रहा है...\",\r\n      \"lighting\": \"प्रकाश व्यवस्था\",\r\n      \"lightingPlaceholder\": \"प्राकृतिक, नाटकीय, नरम, आदि...\",\r\n      \"mood\": \"मूड\",\r\n      \"moodPlaceholder\": \"भावनात्मक वातावरण, स्वर...\",\r\n      \"language\": \"भाषा\",\r\n      \"moodboard\": \"मूडबोर्ड\",\r\n      \"moodboardEnabled\": \"मूडबोर्ड सक्षम करें\",\r\n      \"moodboardDescription\": \"जनरेशन को निर्देशित करने के लिए संदर्भ छवियां अपलोड करें\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"उत्पन्न प्रॉम्प्ट\",\r\n      \"copyButton\": \"कॉपी करें\",\r\n      \"copied\": \"कॉपी किया गया!\",\r\n      \"randomizeButton\": \"रैंडमाइज़\",\r\n      \"clearButton\": \"सब कुछ साफ़ करें\",\r\n      \"enhanceButton\": \"AI के साथ बढ़ाएं\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI एन्हांसमेंट\",\r\n      \"description\": \"उन्नत AI तकनीकों के साथ अपने प्रॉम्प्ट को बढ़ाएं\",\r\n      \"focusTypes\": {\r\n        \"character\": \"पात्र फोकस\",\r\n        \"action\": \"कार्रवाई फोकस\",\r\n        \"cinematic\": \"सिनेमैटिक फोकस\",\r\n        \"safe\": \"सुरक्षित सामग्री\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"एन्हांसमेंट सेटिंग्स\",\r\n        \"characterLimit\": \"अक्षर सीमा\",\r\n        \"includeAudio\": \"ऑडियो विवरण शामिल करें\",\r\n        \"model\": \"AI मॉडल\"\r\n      },\r\n      \"enhanceButton\": \"प्रॉम्प्ट बढ़ाएं\",\r\n      \"enhancing\": \"बढ़ा रहा है...\",\r\n      \"enhanceError\": \"एन्हांसमेंट विफल\",\r\n      \"enhancementInfo\": {\r\n        \"model\": \"मॉडल\",\r\n        \"length\": \"लंबाई\",\r\n        \"actualCharacters\": \"वास्तविक अक्षर\",\r\n        \"targetCharacters\": \"लक्ष्य अक्षर\"\r\n      }\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"प्रॉम्प्ट इतिहास\",\r\n      \"empty\": \"अभी तक इतिहास में कोई प्रॉम्प्ट नहीं\",\r\n      \"loadButton\": \"लोड करें\",\r\n      \"clearButton\": \"इतिहास साफ़ करें\",\r\n      \"columns\": {\r\n        \"timestamp\": \"दिनांक\",\r\n        \"basicPrompt\": \"बुनियादी प्रॉम्प्ट\",\r\n        \"enhancedPrompt\": \"बढ़ाया गया प्रॉम्प्ट\",\r\n        \"length\": \"लंबाई\",\r\n        \"model\": \"मॉडल\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"लोड हो रहा है...\",\r\n      \"error\": \"त्रुटि\",\r\n      \"success\": \"सफलता\",\r\n      \"cancel\": \"रद्द करें\",\r\n      \"save\": \"सहेजें\",\r\n      \"delete\": \"हटाएं\",\r\n      \"edit\": \"संपादित करें\",\r\n      \"close\": \"बंद करें\"\r\n    }\r\n  }\r\n}\r\n","export { default as en } from \"./en.json\";\r\nexport { default as ru } from \"./ru.json\";\r\nexport { default as tr } from \"./tr.json\";\r\nexport { default as es } from \"./es.json\";\r\nexport { default as hi } from \"./hi.json\";\r\n\r\nexport type Locale = \"en\" | \"ru\" | \"tr\" | \"es\" | \"hi\";\r\n\r\nexport const locales: Locale[] = [\"en\", \"ru\", \"tr\", \"es\", \"hi\"];\r\nexport const defaultLocale: Locale = \"en\";\r\n","import { en, ru, tr, es, hi, type Locale } from \"../translations\";\r\n\r\nconst dictionaries: Record<Locale, Record<string, any>> = {\r\n  en,\r\n  ru,\r\n  tr,\r\n  es,\r\n  hi,\r\n};\r\n\r\nfunction getNested(obj: unknown, path: string | string[]) {\r\n  const keys = Array.isArray(path) ? path : path.split(\".\");\r\n  return keys.reduce((acc, key) => {\r\n    if (acc && typeof acc === \"object\" && key in acc) {\r\n      return (acc as Record<string, unknown>)[key];\r\n    }\r\n    return undefined;\r\n  }, obj);\r\n}\r\n\r\nexport function useTranslation(locale: Locale) {\r\n  const dict = dictionaries[locale] || dictionaries.en;\r\n\r\n  function t<T = string>(key: string, fallback?: T): T {\r\n    const value = getNested(dict, key);\r\n    if (value !== undefined) return value as T;\r\n\r\n    if (fallback !== undefined) return fallback;\r\n    return key as unknown as T;\r\n  }\r\n\r\n  return { t };\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  Label,\r\n  Badge,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@turbo-super/ui\";\r\nimport { MoodboardImage } from \"../types\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface MoodboardUploaderProps {\r\n  enabled: boolean;\r\n  onEnabledChange: (enabled: boolean) => void;\r\n  onImagesChange: (images: MoodboardImage[]) => void;\r\n  maxImages?: number;\r\n  value?: MoodboardImage[];\r\n  locale?: Locale;\r\n}\r\n\r\nexport function MoodboardUploader({\r\n  enabled,\r\n  onEnabledChange,\r\n  onImagesChange,\r\n  maxImages = 3,\r\n  value = [],\r\n  locale = \"en\",\r\n}: MoodboardUploaderProps) {\r\n  const { t } = useTranslation(locale);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n    if (!files) return;\r\n\r\n    const newImages: MoodboardImage[] = [];\r\n\r\n    for (let i = 0; i < Math.min(files.length, maxImages - value.length); i++) {\r\n      const file = files[i];\r\n      if (file.type.startsWith(\"image/\")) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const base64 = e.target?.result as string;\r\n          const newImage: MoodboardImage = {\r\n            id: Date.now().toString() + i,\r\n            file: file,\r\n            base64: base64,\r\n            tags: [],\r\n            description: \"\",\r\n            weight: 1.0,\r\n          };\r\n\r\n          const updatedImages = [...value, newImage];\r\n          onImagesChange(updatedImages);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDropZoneClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const removeImage = (imageId: string) => {\r\n    const updatedImages = value.filter((img) => img.id !== imageId);\r\n    onImagesChange(updatedImages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Enable/Disable Toggle */}\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"moodboard-toggle\"\r\n            checked={enabled}\r\n            onChange={(e) => onEnabledChange(e.target.checked)}\r\n            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n          />\r\n          <Label\r\n            htmlFor=\"moodboard-toggle\"\r\n            className=\"text-sm font-medium\"\r\n          >\r\n            {t(\"veo3PromptGenerator.promptBuilder.moodboardTitle\")}\r\n          </Label>\r\n        </div>\r\n        {enabled && (\r\n          <Badge\r\n            variant=\"outline\"\r\n            className=\"text-xs\"\r\n          >\r\n            {t(\"veo3PromptGenerator.promptBuilder.moodboardImages\").replace(\r\n              \"0/3\",\r\n              `${value.length}/${maxImages}`\r\n            )}\r\n          </Badge>\r\n        )}\r\n      </div>\r\n\r\n      {enabled && (\r\n        <div className=\"space-y-6\">\r\n          {/* Image Uploader */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.visualReferences\")}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                onChange={handleFileSelect}\r\n                className=\"hidden\"\r\n              />\r\n              <div\r\n                className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-6 text-center cursor-pointer hover:border-blue-400 dark:hover:border-blue-500 transition-colors\"\r\n                onClick={handleDropZoneClick}\r\n              >\r\n                <div className=\"text-gray-500 dark:text-gray-400 mb-2\">\r\n                  📁 {t(\"veo3PromptGenerator.promptBuilder.uploadImages\")}\r\n                </div>\r\n                <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n                  {t(\r\n                    \"veo3PromptGenerator.promptBuilder.uploadDescription\"\r\n                  ).replace(\"3\", maxImages.toString())}\r\n                </p>\r\n                <p className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\r\n                  {t(\"veo3PromptGenerator.promptBuilder.supportedFormats\")}\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Image Configuration */}\r\n          {value.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              {value.map((image) => (\r\n                <Card\r\n                  key={image.id}\r\n                  className=\"group relative\"\r\n                >\r\n                  <CardContent className=\"pt-6\">\r\n                    {/* Delete Button */}\r\n                    <button\r\n                      onClick={() => removeImage(image.id)}\r\n                      className=\"absolute top-2 right-2 z-10 p-1 bg-red-500 hover:bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                      title=\"Remove image\"\r\n                    >\r\n                      ✕\r\n                    </button>\r\n\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                      {/* Image Preview */}\r\n                      <div className=\"lg:col-span-1\">\r\n                        <div className=\"aspect-square relative rounded-lg overflow-hidden bg-muted\">\r\n                          {image.url ? (\r\n                            <img\r\n                              src={image.url}\r\n                              alt=\"Moodboard reference\"\r\n                              className=\"w-full h-full object-cover\"\r\n                            />\r\n                          ) : image.base64 ? (\r\n                            <img\r\n                              src={image.base64}\r\n                              alt=\"Moodboard reference\"\r\n                              className=\"w-full h-full object-cover\"\r\n                            />\r\n                          ) : (\r\n                            <div className=\"w-full h-full flex items-center justify-center text-muted-foreground\">\r\n                              Image Preview\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Configuration */}\r\n                      <div className=\"lg:col-span-2 space-y-4\">\r\n                        <div className=\"text-sm text-muted-foreground\">\r\n                          <p>Image ID: {image.id}</p>\r\n                          {image.description && (\r\n                            <p>Description: {image.description}</p>\r\n                          )}\r\n                          {image.tags.length > 0 && (\r\n                            <p>Tags: {image.tags.join(\", \")}</p>\r\n                          )}\r\n                          <p>Weight: {image.weight}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Instructions */}\r\n          <Card className=\"border-blue-200 bg-blue-50/50 dark:border-blue-800 dark:bg-blue-950/20\">\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"space-y-3\">\r\n                <h4 className=\"text-sm font-semibold text-blue-900 dark:text-blue-100 flex items-center gap-2\">\r\n                  🎨 {t(\"veo3PromptGenerator.promptBuilder.moodboardTips\")}\r\n                </h4>\r\n                <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-2\">\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\r\n                    <span>{t(\"veo3PromptGenerator.promptBuilder.tip1\")}</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\r\n                    <span>{t(\"veo3PromptGenerator.promptBuilder.tip2\")}</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\r\n                                         <span>\r\n                       {t(\"veo3PromptGenerator.promptBuilder.tip3\")}\r\n                     </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Textarea,\r\n  Label,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { Trash2 } from \"lucide-react\";\r\nimport { Character, PromptData, PresetOptions, MoodboardImage } from \"../types\";\r\nimport { MoodboardUploader as DefaultMoodboardUploader } from \"./MoodboardUploader\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface PromptBuilderProps {\r\n  promptData: PromptData;\r\n  setPromptData: (data: PromptData) => void;\r\n  addCharacter: () => void;\r\n  updateCharacter: (id: string, field: keyof Character, value: string) => void;\r\n  removeCharacter: (id: string) => void;\r\n  presetOptions: PresetOptions;\r\n  moodboardEnabled?: boolean;\r\n  setMoodboardEnabled?: (enabled: boolean) => void;\r\n  moodboardImages?: MoodboardImage[];\r\n  setMoodboardImages?: (images: MoodboardImage[]) => void;\r\n  MoodboardUploader?: React.ComponentType<{\r\n    images: MoodboardImage[];\r\n    setImages: (images: MoodboardImage[]) => void;\r\n  }>;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function PromptBuilder({\r\n  promptData,\r\n  setPromptData,\r\n  addCharacter,\r\n  updateCharacter,\r\n  removeCharacter,\r\n  presetOptions,\r\n  moodboardEnabled = false,\r\n  setMoodboardEnabled,\r\n  moodboardImages = [],\r\n  setMoodboardImages,\r\n  MoodboardUploader,\r\n  locale = \"en\",\r\n}: PromptBuilderProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle>{t(\"veo3PromptGenerator.tabs.builder\")}</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Scene Description */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-blue-500 bg-blue-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"scene\"\r\n            className=\"flex items-center gap-2 text-blue-300 font-medium\"\r\n          >\r\n            🎬 {t(\"veo3PromptGenerator.promptBuilder.scene\")}\r\n          </Label>\r\n          <Textarea\r\n            id=\"scene\"\r\n            placeholder={t(\r\n              \"veo3PromptGenerator.promptBuilder.scenePlaceholder\"\r\n            )}\r\n            value={promptData.scene}\r\n            onChange={(e) =>\r\n              setPromptData({ ...promptData, scene: e.target.value })\r\n            }\r\n            className=\"min-h-[80px] border-blue-600 bg-blue-950/10 focus:border-blue-400 focus:ring-blue-400\"\r\n          />\r\n        </div>\r\n        {/* Characters */}\r\n        <div className=\"space-y-4 p-4 border-l-4 border-green-500 bg-green-950/20 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label className=\"flex items-center gap-2 text-green-300 font-medium\">\r\n              👥 {t(\"veo3PromptGenerator.promptBuilder.characters\")} (\r\n              {promptData.characters.length})\r\n            </Label>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={addCharacter}\r\n              className=\"text-xs border-green-600 text-green-300 hover:bg-green-950/30\"\r\n            >\r\n              + {t(\"veo3PromptGenerator.promptBuilder.addCharacter\")}\r\n            </Button>\r\n          </div>\r\n          {promptData.characters.length === 0 && (\r\n            <div className=\"text-sm text-muted-foreground p-4 border border-dashed rounded-lg text-center\">\r\n              {t(\"veo3PromptGenerator.promptBuilder.noCharacters\")}\r\n            </div>\r\n          )}\r\n          {promptData.characters.map((character, index) => (\r\n            <div\r\n              key={character.id}\r\n              className=\"p-4 border border-green-600 bg-green-950/10 rounded-lg space-y-3\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label className=\"text-sm font-medium\">\r\n                  {t(\"veo3PromptGenerator.promptBuilder.characterNumber\")}{\" \"}\r\n                  {index + 1}\r\n                </Label>\r\n                {promptData.characters.length > 1 && (\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={() => removeCharacter(character.id)}\r\n                    className=\"text-red-500 hover:text-red-700 size-6 p-0\"\r\n                  >\r\n                    <Trash2 className=\"size-3\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className=\"grid grid-cols-1 gap-3\">\r\n                <div>\r\n                  <Label\r\n                    htmlFor={`char-name-${character.id}`}\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {t(\"veo3PromptGenerator.promptBuilder.characterName\")}\r\n                  </Label>\r\n                  <input\r\n                    id={`char-name-${character.id}`}\r\n                    type=\"text\"\r\n                    placeholder={t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterNamePlaceholder\"\r\n                    )}\r\n                    value={character.name}\r\n                    onChange={(e) =>\r\n                      updateCharacter(character.id, \"name\", e.target.value)\r\n                    }\r\n                    className=\"w-full px-3 py-2 border border-green-600 bg-green-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-green-400 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label\r\n                    htmlFor={`char-desc-${character.id}`}\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterDescription\"\r\n                    )}\r\n                  </Label>\r\n                  <Textarea\r\n                    id={`char-desc-${character.id}`}\r\n                    placeholder={t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterDescriptionPlaceholder\"\r\n                    )}\r\n                    value={character.description}\r\n                    onChange={(e) =>\r\n                      updateCharacter(\r\n                        character.id,\r\n                        \"description\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"min-h-[60px] text-sm border-green-600 bg-green-950/10 focus:border-green-400 focus:ring-green-400\"\r\n                  />\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Label\r\n                      htmlFor={`char-speech-${character.id}`}\r\n                      className=\"text-xs\"\r\n                    >\r\n                      {t(\"veo3PromptGenerator.promptBuilder.characterSpeech\")}\r\n                    </Label>\r\n                    {character.speech && (\r\n                      <Badge\r\n                        variant=\"secondary\"\r\n                        className=\"text-xs px-2 py-0.5\"\r\n                      >\r\n                        🎙️ {t(\"veo3PromptGenerator.promptBuilder.hasVoice\")}\r\n                      </Badge>\r\n                    )}\r\n                  </div>\r\n                  <Textarea\r\n                    id={`char-speech-${character.id}`}\r\n                    placeholder={t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterSpeechPlaceholder\"\r\n                    )}\r\n                    value={character.speech}\r\n                    onChange={(e) =>\r\n                      updateCharacter(character.id, \"speech\", e.target.value)\r\n                    }\r\n                    className={`min-h-[50px] text-sm border-green-600 bg-green-950/10 focus:border-green-400 focus:ring-green-400 ${character.speech ? \"border-blue-400 bg-blue-950/20\" : \"\"}`}\r\n                  />\r\n                  {character.speech && (\r\n                    <div className=\"mt-1 text-xs text-blue-300 flex items-center gap-1\">\r\n                      <span>🔊</span>\r\n                      <span>\r\n                        {t(\"veo3PromptGenerator.promptBuilder.voiceHighlight\")}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* Action */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-orange-500 bg-orange-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"action\"\r\n            className=\"flex items-center gap-2 text-orange-300 font-medium\"\r\n          >\r\n            🎭 {t(\"veo3PromptGenerator.promptBuilder.action\")}\r\n          </Label>\r\n          <Textarea\r\n            id=\"action\"\r\n            placeholder={t(\r\n              \"veo3PromptGenerator.promptBuilder.actionPlaceholder\"\r\n            )}\r\n            value={promptData.action}\r\n            onChange={(e) =>\r\n              setPromptData({ ...promptData, action: e.target.value })\r\n            }\r\n            className=\"border-orange-600 bg-orange-950/10 focus:border-orange-400 focus:ring-orange-400\"\r\n          />\r\n        </div>\r\n        {/* Language */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-yellow-500 bg-yellow-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"language\"\r\n            className=\"flex items-center gap-2 text-yellow-300 font-medium\"\r\n          >\r\n            🗣️ {t(\"veo3PromptGenerator.promptBuilder.language\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"language\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.languagePlaceholder\"\r\n              )}\r\n              value={promptData.language}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, language: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-yellow-600 bg-yellow-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-yellow-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.languages.map((language: string) => (\r\n                <Badge\r\n                  key={language}\r\n                  variant={\r\n                    promptData.language === language ? \"default\" : \"outline\"\r\n                  }\r\n                  className={`cursor-pointer text-xs ${promptData.language === language ? \"bg-yellow-600 text-white\" : \"border-yellow-600 text-yellow-300 hover:bg-yellow-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, language })}\r\n                >\r\n                  {language}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Visual Style */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-purple-500 bg-purple-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"style\"\r\n            className=\"flex items-center gap-2 text-purple-300 font-medium\"\r\n          >\r\n            🎨 {t(\"veo3PromptGenerator.promptBuilder.style\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"style\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.stylePlaceholder\"\r\n              )}\r\n              value={promptData.style}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, style: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-purple-600 bg-purple-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-purple-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.styles.map((style: string) => (\r\n                <Badge\r\n                  key={style}\r\n                  variant={promptData.style === style ? \"default\" : \"outline\"}\r\n                  className={`cursor-pointer text-xs ${promptData.style === style ? \"bg-purple-600 text-white\" : \"border-purple-600 text-purple-300 hover:bg-purple-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, style })}\r\n                >\r\n                  {style}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Camera Angle */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-indigo-500 bg-indigo-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"camera\"\r\n            className=\"flex items-center gap-2 text-indigo-300 font-medium\"\r\n          >\r\n            📹 {t(\"veo3PromptGenerator.promptBuilder.camera\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"camera\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.cameraPlaceholder\"\r\n              )}\r\n              value={promptData.camera}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, camera: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-indigo-600 bg-indigo-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-indigo-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.cameras.map((camera: string) => (\r\n                <Badge\r\n                  key={camera}\r\n                  variant={promptData.camera === camera ? \"default\" : \"outline\"}\r\n                  className={`cursor-pointer text-xs ${promptData.camera === camera ? \"bg-indigo-600 text-white\" : \"border-indigo-600 text-indigo-300 hover:bg-indigo-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, camera })}\r\n                >\r\n                  {camera}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Lighting */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-pink-500 bg-pink-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"lighting\"\r\n            className=\"flex items-center gap-2 text-pink-300 font-medium\"\r\n          >\r\n            💡 {t(\"veo3PromptGenerator.promptBuilder.lighting\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"lighting\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.lightingPlaceholder\"\r\n              )}\r\n              value={promptData.lighting}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, lighting: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-pink-600 bg-pink-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-pink-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-pink-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.lighting.map((light: string) => (\r\n                <Badge\r\n                  key={light}\r\n                  variant={\r\n                    promptData.lighting === light ? \"default\" : \"outline\"\r\n                  }\r\n                  className={`cursor-pointer text-xs ${promptData.lighting === light ? \"bg-pink-600 text-white\" : \"border-pink-600 text-pink-300 hover:bg-pink-950/30\"}`}\r\n                  onClick={() =>\r\n                    setPromptData({ ...promptData, lighting: light })\r\n                  }\r\n                >\r\n                  {light}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Mood */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-rose-500 bg-rose-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"mood\"\r\n            className=\"flex items-center gap-2 text-rose-300 font-medium\"\r\n          >\r\n            🌟 {t(\"veo3PromptGenerator.promptBuilder.mood\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"mood\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.moodPlaceholder\"\r\n              )}\r\n              value={promptData.mood}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, mood: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-rose-600 bg-rose-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-rose-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-rose-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.moods.map((mood: string) => (\r\n                <Badge\r\n                  key={mood}\r\n                  variant={promptData.mood === mood ? \"default\" : \"outline\"}\r\n                  className={`cursor-pointer text-xs ${promptData.mood === mood ? \"bg-rose-600 text-white\" : \"border-rose-600 text-rose-300 hover:bg-rose-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, mood })}\r\n                >\r\n                  {mood}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* MoodboardUploader */}\r\n        {moodboardEnabled !== undefined &&\r\n          setMoodboardEnabled &&\r\n          setMoodboardImages &&\r\n          (MoodboardUploader ? (\r\n            <MoodboardUploader\r\n              images={moodboardImages}\r\n              setImages={setMoodboardImages}\r\n            />\r\n          ) : (\r\n            <DefaultMoodboardUploader\r\n              enabled={moodboardEnabled}\r\n              onEnabledChange={setMoodboardEnabled}\r\n              onImagesChange={setMoodboardImages}\r\n              maxImages={3}\r\n              value={moodboardImages}\r\n              locale={locale}\r\n            />\r\n          ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Textarea,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { Copy, Shuffle, Sparkles, Trash2 } from \"lucide-react\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface PromptPreviewProps {\r\n  generatedPrompt: string;\r\n  setGeneratedPrompt: (prompt: string) => void;\r\n  randomizePrompt: () => void;\r\n  clearAll: () => void;\r\n  copyToClipboard: (text: string) => void;\r\n  copied: boolean;\r\n  setActiveTab: (tab: string) => void;\r\n  isEnhancing: boolean;\r\n  enhancePrompt: () => void;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function PromptPreview({\r\n  generatedPrompt,\r\n  setGeneratedPrompt,\r\n  randomizePrompt,\r\n  clearAll,\r\n  copyToClipboard,\r\n  copied,\r\n  setActiveTab,\r\n  isEnhancing,\r\n  enhancePrompt,\r\n  locale = \"en\",\r\n}: PromptPreviewProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Copy className=\"w-5 h-5\" />\r\n          {t(\"veo3PromptGenerator.promptPreview.title\")}\r\n          <Badge\r\n            variant=\"secondary\"\r\n            className=\"ml-auto text-xs\"\r\n          >\r\n            {t(\"veo3PromptGenerator.promptPreview.preview\")}\r\n          </Badge>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {/* Textarea with Copy button in top-right - Now Editable */}\r\n          <div className=\"relative\">\r\n            <Textarea\r\n              value={generatedPrompt}\r\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n                setGeneratedPrompt(e.target.value)\r\n              }\r\n              placeholder={t(\"veo3PromptGenerator.promptPreview.placeholder\")}\r\n              className=\"min-h-[400px] font-mono text-sm resize-none pr-20 bg-background border-border text-foreground\"\r\n            />\r\n            <div className=\"absolute top-2 right-2 flex gap-1\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"ghost\"\r\n                onClick={() => setGeneratedPrompt(\"\")}\r\n                disabled={!generatedPrompt}\r\n                className=\"size-8 p-0 hover:bg-background/80\"\r\n                title=\"Clear text\"\r\n              >\r\n                <Trash2 className=\"size-4\" />\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"ghost\"\r\n                onClick={() => copyToClipboard(generatedPrompt)}\r\n                disabled={!generatedPrompt}\r\n                className=\"size-8 p-0 hover:bg-background/80\"\r\n                title={copied ? \"Copied!\" : \"Copy to clipboard\"}\r\n              >\r\n                <Copy className=\"size-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {/* Action Buttons */}\r\n          <div className=\"space-y-3\">\r\n            {/* Quick Actions */}\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={randomizePrompt}\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n              >\r\n                <Shuffle className=\"size-4 mr-2\" />\r\n                {t(\"veo3PromptGenerator.promptPreview.randomizeButton\")}\r\n              </Button>\r\n              <Button\r\n                onClick={clearAll}\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n              >\r\n                <Trash2 className=\"size-4 mr-2\" />\r\n                {t(\"veo3PromptGenerator.promptPreview.clearButton\")}\r\n              </Button>\r\n            </div>\r\n            {/* Navigate to AI Enhancement - Large and Prominent */}\r\n            <Button\r\n              onClick={() => {\r\n                setActiveTab(\"enhance\");\r\n                setTimeout(() => {\r\n                  if (generatedPrompt && !isEnhancing) {\r\n                    enhancePrompt();\r\n                  }\r\n                }, 100);\r\n              }}\r\n              disabled={!generatedPrompt}\r\n              size=\"lg\"\r\n              className=\"w-full h-16 text-lg font-bold bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\r\n            >\r\n              <Sparkles className=\"size-6 mr-3\" />\r\n              {t(\"veo3PromptGenerator.promptPreview.enhanceButton\")}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Textarea,\r\n  Badge,\r\n  StripePaymentButton,\r\n} from \"@turbo-super/ui\";\r\nimport {\r\n  Sparkles,\r\n  Loader2,\r\n  Settings,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  Copy,\r\n  CreditCard,\r\n} from \"lucide-react\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface AIEnhancementProps {\r\n  enhancedPrompt: string;\r\n  setEnhancedPrompt: (prompt: string) => void;\r\n  generatedPrompt: string;\r\n  enhanceWithSelectedFocus: () => void;\r\n  isEnhancing: boolean;\r\n  enhanceError: string;\r\n  enhancementInfo: any;\r\n  selectedFocusTypes: string[];\r\n  toggleFocusType: (\r\n    type: \"character\" | \"action\" | \"cinematic\" | \"safe\"\r\n  ) => void;\r\n  includeAudio: boolean;\r\n  setIncludeAudio: (val: boolean) => void;\r\n  customCharacterLimit: number;\r\n  setCustomCharacterLimit: (val: number) => void;\r\n  showSettings: boolean;\r\n  showPaymentButton?: boolean;\r\n  setShowSettings: (val: boolean) => void;\r\n  copied: boolean;\r\n  copyToClipboard: (text: string) => void;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function AIEnhancement({\r\n  enhancedPrompt,\r\n  setEnhancedPrompt,\r\n  generatedPrompt,\r\n  enhanceWithSelectedFocus,\r\n  isEnhancing,\r\n  enhanceError,\r\n  enhancementInfo,\r\n  selectedFocusTypes,\r\n  toggleFocusType,\r\n  includeAudio,\r\n  setIncludeAudio,\r\n  customCharacterLimit,\r\n  setCustomCharacterLimit,\r\n  showSettings,\r\n  showPaymentButton = true,\r\n  setShowSettings,\r\n  copied,\r\n  copyToClipboard,\r\n  locale = \"en\",\r\n}: AIEnhancementProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Sparkles className=\"w-5 h-5 text-purple-600\" />\r\n          {t(\"veo3PromptGenerator.aiEnhancement.title\")}\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {/* Main AI Enhance Button - Large and Prominent */}\r\n          <Button\r\n            onClick={enhanceWithSelectedFocus}\r\n            disabled={isEnhancing}\r\n            size=\"lg\"\r\n            className=\"w-full h-16 text-lg font-bold bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\r\n          >\r\n            {isEnhancing ? (\r\n              <>\r\n                <Loader2 className=\"w-6 h-6 mr-3 animate-spin\" />\r\n                {t(\"veo3PromptGenerator.aiEnhancement.enhancing\")}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Sparkles className=\"w-6 h-6 mr-3\" />\r\n                {enhancedPrompt.trim()\r\n                  ? t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")\r\n                  : t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")}\r\n                {selectedFocusTypes.length > 0 && (\r\n                  <span className=\"ml-2 text-sm opacity-90\">\r\n                    ({selectedFocusTypes.length}{\" \"}\r\n                    {t(\"veo3PromptGenerator.aiEnhancement.focus\")}\r\n                    {selectedFocusTypes.length !== 1 ? \"es\" : \"\"})\r\n                  </span>\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n          {/* Quick Enhancement Actions */}\r\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-2\">\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"character\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"character\")}\r\n              className=\"text-xs\"\r\n            >\r\n              👤 {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.character\")}\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"action\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"action\")}\r\n              className=\"text-xs\"\r\n            >\r\n              🎬 {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.action\")}\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"cinematic\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"cinematic\")}\r\n              className=\"text-xs\"\r\n            >\r\n              🎥 {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.cinematic\")}\r\n            </Button>\r\n            <Button\r\n              variant={includeAudio ? \"default\" : \"outline\"}\r\n              size=\"sm\"\r\n              onClick={() => setIncludeAudio(!includeAudio)}\r\n              className={`text-xs ${\r\n                includeAudio\r\n                  ? \"bg-blue-600 text-white border-blue-600 hover:bg-blue-700\"\r\n                  : \"bg-blue-50 border-blue-200 hover:bg-blue-100\"\r\n              }`}\r\n            >\r\n              🔊 {t(\"veo3PromptGenerator.aiEnhancement.settings.includeAudio\")}\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"safe\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"safe\")}\r\n              className={`text-xs ${\r\n                selectedFocusTypes.includes(\"safe\")\r\n                  ? \"bg-green-600 text-white border-green-600 hover:bg-green-700\"\r\n                  : \"bg-green-50 border-green-200 hover:bg-green-100\"\r\n              }`}\r\n            >\r\n              🛡️ {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.safe\")}\r\n            </Button>\r\n          </div>\r\n          {/* Collapsible Settings */}\r\n          <div className=\"border rounded-lg\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              onClick={() => setShowSettings(!showSettings)}\r\n              className=\"w-full justify-between p-3 h-auto\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <Settings className=\"w-4 h-4\" />\r\n                <span className=\"text-sm\">\r\n                  {t(\"veo3PromptGenerator.aiEnhancement.settings.title\")}\r\n                </span>\r\n                <Badge\r\n                  variant=\"outline\"\r\n                  className=\"text-xs\"\r\n                >\r\n                  {customCharacterLimit} chars • GPT-4.1\r\n                </Badge>\r\n              </div>\r\n              {showSettings ? (\r\n                <ChevronUp className=\"w-4 h-4\" />\r\n              ) : (\r\n                <ChevronDown className=\"w-4 h-4\" />\r\n              )}\r\n            </Button>\r\n            {showSettings && (\r\n              <div className=\"px-3 pb-3 space-y-3 border-t\">\r\n                {/* Character Limit Slider */}\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-xs text-muted-foreground\">\r\n                      {t(\r\n                        \"veo3PromptGenerator.aiEnhancement.settings.characterLimit\"\r\n                      )}\r\n                    </span>\r\n                    <Badge\r\n                      variant=\"outline\"\r\n                      className=\"text-xs\"\r\n                    >\r\n                      {customCharacterLimit} chars\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"200\"\r\n                      max=\"10000\"\r\n                      step=\"100\"\r\n                      value={customCharacterLimit}\r\n                      onChange={(e) =>\r\n                        setCustomCharacterLimit(Number(e.target.value))\r\n                      }\r\n                      className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\r\n                    />\r\n                    <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n                      <span>200</span>\r\n                      <span>2K</span>\r\n                      <span>5K</span>\r\n                      <span>10K</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    {customCharacterLimit < 600 && \"Concise and focused\"}\r\n                    {customCharacterLimit >= 600 &&\r\n                      customCharacterLimit < 1500 &&\r\n                      \"Balanced detail\"}\r\n                    {customCharacterLimit >= 1500 &&\r\n                      customCharacterLimit < 3000 &&\r\n                      \"Rich and detailed\"}\r\n                    {customCharacterLimit >= 3000 && \"Extremely detailed\"}\r\n                  </div>\r\n                </div>\r\n                {/* Model Info */}\r\n                <div className=\"space-y-2\">\r\n                  <span className=\"text-xs text-muted-foreground\">\r\n                    {t(\"veo3PromptGenerator.aiEnhancement.settings.model\")}\r\n                  </span>\r\n                  <div className=\"p-2 bg-muted rounded text-xs\">\r\n                    <div className=\"font-medium\">GPT-4.1</div>\r\n                    <div className=\"text-muted-foreground\">\r\n                      Best quality enhancement model\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {enhanceError && (\r\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n              <p className=\"text-sm text-red-600\">{enhanceError}</p>\r\n            </div>\r\n          )}\r\n          {/* AI Enhanced Prompt Display */}\r\n          <div className=\"relative\">\r\n            <Textarea\r\n              value={enhancedPrompt}\r\n              onChange={(e) => setEnhancedPrompt(e.target.value)}\r\n              placeholder=\"Click 'Enhance with AI' to generate a professional, detailed prompt...\"\r\n              className=\"min-h-[500px] font-mono text-sm resize-none whitespace-pre-wrap pr-12 bg-background border-border text-foreground\"\r\n            />\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"ghost\"\r\n              onClick={() => copyToClipboard(enhancedPrompt)}\r\n              disabled={!enhancedPrompt}\r\n              className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-background/80\"\r\n              title={copied ? \"Copied!\" : \"Copy enhanced prompt\"}\r\n            >\r\n              <Copy className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n          {/* Enhancement Info - Compact */}\r\n          {enhancementInfo && (\r\n            <div className=\"p-3 bg-muted/50 rounded-lg\">\r\n              <div className=\"flex justify-between items-center text-xs text-muted-foreground\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <span>\r\n                    Model:{\" \"}\r\n                    <span className=\"font-medium text-foreground\">\r\n                      {enhancementInfo.modelName || enhancementInfo.model}\r\n                    </span>\r\n                  </span>\r\n                  <span>\r\n                    Length:{\" \"}\r\n                    <span className=\"font-medium text-foreground\">\r\n                      {enhancementInfo.length}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span>\r\n                    Characters:{\" \"}\r\n                    <span className=\"font-medium text-foreground\">\r\n                      {enhancementInfo.actualCharacters} /{\" \"}\r\n                      {enhancementInfo.targetCharacters}\r\n                    </span>\r\n                  </span>\r\n                  <Badge\r\n                    variant={\r\n                      enhancementInfo.actualCharacters <=\r\n                      enhancementInfo.targetCharacters\r\n                        ? \"default\"\r\n                        : \"secondary\"\r\n                    }\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {enhancementInfo.actualCharacters <=\r\n                    enhancementInfo.targetCharacters\r\n                      ? \"✓ Within limit\"\r\n                      : \"⚠ Over limit\"}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Bottom Enhance Button - Duplicate for convenience */}\r\n          <Button\r\n            onClick={enhanceWithSelectedFocus}\r\n            disabled={isEnhancing}\r\n            size=\"lg\"\r\n            className=\"w-full h-16 text-lg font-bold bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\r\n          >\r\n            {isEnhancing ? (\r\n              <>\r\n                <Loader2 className=\"w-6 h-6 mr-3 animate-spin\" />\r\n                {t(\"veo3PromptGenerator.aiEnhancement.enhancing\")}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Sparkles className=\"w-6 h-6 mr-3\" />\r\n                {enhancedPrompt.trim()\r\n                  ? t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")\r\n                  : t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")}\r\n                {selectedFocusTypes.length > 0 && (\r\n                  <span className=\"ml-2 text-sm opacity-90\">\r\n                    ({selectedFocusTypes.length}{\" \"}\r\n                    {t(\"veo3PromptGenerator.aiEnhancement.focus\")}\r\n                    {selectedFocusTypes.length !== 1 ? \"es\" : \"\"})\r\n                  </span>\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n\r\n          {/* Payment Button - Only show when we have an enhanced prompt */}\r\n          {showPaymentButton && generatedPrompt.trim() && (\r\n            <div className=\"mt-6 p-4 bg-gradient-to-r from-purple-50/50 to-blue-50/50 dark:from-purple-950/30 dark:to-blue-950/30 border border-purple-200/50 dark:border-purple-600/30 rounded-lg\">\r\n              <div className=\"text-center mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-purple-900 dark:text-purple-100 mb-2\">\r\n                  Ready to Generate Your Video?\r\n                </h3>\r\n                <p className=\"text-sm text-purple-700 dark:text-purple-300\">\r\n                  Your enhanced prompt is ready! Generate a professional VEO3\r\n                  video for just $1.00\r\n                </p>\r\n              </div>\r\n              <StripePaymentButton\r\n                variant=\"video\"\r\n                toolSlug=\"veo3-prompt-generator\"\r\n                toolTitle=\"VEO3 Video Generator\"\r\n                price={1.0}\r\n                apiEndpoint=\"/api/stripe-prices\"\r\n                checkoutEndpoint=\"/api/create-checkout\"\r\n                className=\"border-0 shadow-none\"\r\n                prompt={generatedPrompt}\r\n                // toolSlug=\"veo3-prompt-generator\"\r\n                // toolTitle=\"VEO3 Video Generator\"\r\n                // onPaymentClick={() => console.log(\"VEO3 payment started\")}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { Copy, Trash2 } from \"lucide-react\";\r\nimport { HistoryItem } from \"../types\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface PromptHistoryProps {\r\n  promptHistory: HistoryItem[];\r\n  loadFromHistory: (item: HistoryItem) => void;\r\n  clearHistory: () => void;\r\n  setActiveTab: (tab: string) => void;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function PromptHistory({\r\n  promptHistory,\r\n  loadFromHistory,\r\n  clearHistory,\r\n  setActiveTab,\r\n  locale = \"en\",\r\n}: PromptHistoryProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      {promptHistory.length > 0 ? (\r\n        <>\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Copy className=\"w-5 h-5\" />\r\n                {t(\"veo3PromptGenerator.promptHistory.title\")}\r\n                <Badge\r\n                  variant=\"outline\"\r\n                  className=\"ml-2\"\r\n                >\r\n                  {promptHistory.length}/10\r\n                </Badge>\r\n              </CardTitle>\r\n              <Button\r\n                onClick={clearHistory}\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"text-muted-foreground hover:text-destructive\"\r\n              >\r\n                <Trash2 className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {promptHistory.slice(0, 10).map((historyItem) => (\r\n                <div\r\n                  key={historyItem.id}\r\n                  className=\"p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\r\n                >\r\n                  <div className=\"flex justify-between items-start mb-3\">\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      {historyItem.timestamp &&\r\n                      typeof historyItem.timestamp === \"object\" &&\r\n                      \"toLocaleString\" in historyItem.timestamp\r\n                        ? historyItem.timestamp.toLocaleString()\r\n                        : String(historyItem.timestamp)}\r\n                    </p>\r\n                    <div className=\"flex gap-1\">\r\n                      {historyItem.model && (\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className=\"text-xs\"\r\n                        >\r\n                          {historyItem.model}\r\n                        </Badge>\r\n                      )}\r\n                      <Badge\r\n                        variant=\"secondary\"\r\n                        className=\"text-xs\"\r\n                      >\r\n                        {historyItem.length}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm mb-3 line-clamp-3\">\r\n                    {historyItem.basicPrompt &&\r\n                    historyItem.basicPrompt.length > 120\r\n                      ? historyItem.basicPrompt.substring(0, 120) + \"...\"\r\n                      : historyItem.basicPrompt}\r\n                  </p>\r\n                  <Button\r\n                    onClick={() => loadFromHistory(historyItem)}\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"w-full\"\r\n                  >\r\n                    {t(\"veo3PromptGenerator.promptHistory.loadButton\")}\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </>\r\n      ) : (\r\n        <CardContent className=\"flex flex-col items-center justify-center py-12\">\r\n          <Copy className=\"w-12 h-12 text-muted-foreground mb-4\" />\r\n                     <h3 className=\"text-lg font-semibold mb-2\">{t(\"veo3PromptGenerator.promptHistory.empty\")}</h3>\r\n                     <p className=\"text-muted-foreground text-center mb-4\">\r\n             {t(\"veo3PromptGenerator.promptHistory.empty\")}\r\n           </p>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => setActiveTab(\"builder\")}\r\n          >\r\n                         {t(\"veo3PromptGenerator.promptHistory.loadButton\")}\r\n          </Button>\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import { PromptData, Character } from \"../types\";\r\nimport { Locale } from \"../translations\";\r\n\r\nexport const generatePrompt = (data: PromptData): string => {\r\n  const parts: string[] = [];\r\n\r\n  if (data.scene) parts.push(data.scene);\r\n\r\n  if (data.characters.length > 0) {\r\n    const validCharacters = data.characters.filter(\r\n      (char) => char.name || char.description\r\n    );\r\n    if (validCharacters.length > 0) {\r\n      const characterDescriptions = validCharacters.map((char) => {\r\n        let desc = char.description || char.name || \"a character\";\r\n        if (char.speech && data.language) {\r\n          desc += ` who says in ${data.language.toLowerCase()}: \"${char.speech}\"`;\r\n        }\r\n        return desc;\r\n      });\r\n      parts.push(`featuring ${characterDescriptions.join(\", \")}`);\r\n    }\r\n  }\r\n\r\n  if (data.action) parts.push(`${data.action}`);\r\n  if (data.camera) parts.push(`Shot with ${data.camera.toLowerCase()}`);\r\n  if (data.style) parts.push(`${data.style.toLowerCase()} style`);\r\n  if (data.lighting) parts.push(`${data.lighting.toLowerCase()} lighting`);\r\n  if (data.mood) parts.push(`${data.mood.toLowerCase()} mood`);\r\n\r\n  return parts.length > 0\r\n    ? parts.join(\", \") + \".\"\r\n    : \"Your generated prompt will appear here, or type your own prompt...\";\r\n};\r\n\r\nexport const createRandomPromptData = (): PromptData => {\r\n  const styles = [\r\n    \"Cinematic\",\r\n    \"Documentary\",\r\n    \"Anime\",\r\n    \"Realistic\",\r\n    \"Artistic\",\r\n    \"Vintage\",\r\n    \"Modern\",\r\n  ];\r\n  const cameras = [\r\n    \"Close-up\",\r\n    \"Wide shot\",\r\n    \"Over-the-shoulder\",\r\n    \"Drone view\",\r\n    \"Handheld\",\r\n    \"Static\",\r\n  ];\r\n  const lighting = [\r\n    \"Natural\",\r\n    \"Golden hour\",\r\n    \"Blue hour\",\r\n    \"Dramatic\",\r\n    \"Soft\",\r\n    \"Neon\",\r\n    \"Candlelight\",\r\n  ];\r\n  const moods = [\r\n    \"Peaceful\",\r\n    \"Energetic\",\r\n    \"Mysterious\",\r\n    \"Romantic\",\r\n    \"Tense\",\r\n    \"Joyful\",\r\n    \"Melancholic\",\r\n  ];\r\n  const languages = [\r\n    \"English\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"German\",\r\n    \"Italian\",\r\n    \"Russian\",\r\n    \"Japanese\",\r\n    \"Chinese\",\r\n  ];\r\n\r\n  return {\r\n    scene: \"A serene lakeside at sunset\",\r\n    characters: [\r\n      {\r\n        id: \"1\",\r\n        name: \"Person\",\r\n        description: \"A person in casual clothes\",\r\n        speech: Math.random() > 0.5 ? \"Perfect evening for this!\" : \"\",\r\n      },\r\n    ],\r\n    action: \"skipping stones across the water\",\r\n    language: languages[Math.floor(Math.random() * languages.length)],\r\n    style: styles[Math.floor(Math.random() * styles.length)],\r\n    camera: cameras[Math.floor(Math.random() * cameras.length)],\r\n    lighting: lighting[Math.floor(Math.random() * lighting.length)],\r\n    mood: moods[Math.floor(Math.random() * moods.length)],\r\n  };\r\n};\r\n\r\nexport const createEmptyPromptData = (): PromptData => ({\r\n  scene: \"\",\r\n  style: \"\",\r\n  camera: \"\",\r\n  characters: [],\r\n  action: \"\",\r\n  lighting: \"\",\r\n  mood: \"\",\r\n  language: \"English\",\r\n});\r\n\r\nexport const createCharacter = (id?: string): Character => ({\r\n  id: id || Date.now().toString(),\r\n  name: \"\",\r\n  description: \"\",\r\n  speech: \"\",\r\n});\r\n\r\nexport const copyToClipboard = async (text: string): Promise<boolean> => {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Failed to copy to clipboard:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getLocaleLanguage = (locale?: Locale): string => {\r\n  if (typeof window === \"undefined\") return \"English\";\r\n\r\n  // Если передан locale как параметр, используем его\r\n  if (locale) {\r\n    const localeToLanguage: Record<Locale, string> = {\r\n      en: \"English\",\r\n      ru: \"Russian\",\r\n      es: \"Spanish\",\r\n      hi: \"Hindi\",\r\n      tr: \"Turkish\",\r\n    };\r\n\r\n    return localeToLanguage[locale] || \"English\";\r\n  }\r\n\r\n  // Иначе получаем из URL (для обратной совместимости)\r\n  const urlLocale = window.location.pathname.split(\"/\")[1];\r\n  const localeToLanguage: Record<string, string> = {\r\n    en: \"English\",\r\n    ru: \"Russian\",\r\n    es: \"Spanish\",\r\n    hi: \"Hindi\",\r\n    tr: \"Turkish\",\r\n  };\r\n\r\n  return localeToLanguage[urlLocale] || \"English\";\r\n};\r\n","import { PresetOptions } from \"../types\";\r\n\r\nexport const PRESET_OPTIONS: PresetOptions = {\r\n  styles: [\r\n    \"Cinematic\",\r\n    \"Documentary\",\r\n    \"Anime\",\r\n    \"Realistic\",\r\n    \"Artistic\",\r\n    \"Vintage\",\r\n    \"Modern\",\r\n  ],\r\n  cameras: [\r\n    \"Close-up\",\r\n    \"Wide shot\",\r\n    \"Over-the-shoulder\",\r\n    \"Drone view\",\r\n    \"Handheld\",\r\n    \"Static\",\r\n  ],\r\n  lighting: [\r\n    \"Natural\",\r\n    \"Golden hour\",\r\n    \"Blue hour\",\r\n    \"Dramatic\",\r\n    \"Soft\",\r\n    \"Neon\",\r\n    \"Candlelight\",\r\n  ],\r\n  moods: [\r\n    \"Peaceful\",\r\n    \"Energetic\",\r\n    \"Mysterious\",\r\n    \"Romantic\",\r\n    \"Tense\",\r\n    \"Joyful\",\r\n    \"Melancholic\",\r\n  ],\r\n  languages: [\r\n    \"English\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"German\",\r\n    \"Italian\",\r\n    \"Russian\",\r\n    \"Japanese\",\r\n    \"Chinese\",\r\n  ],\r\n};\r\n\r\nexport const STORAGE_KEYS = {\r\n  PROMPT_HISTORY: \"veo3-prompt-history\",\r\n  CUSTOM_CHARACTER_LIMIT: \"veo3-custom-character-limit\",\r\n  INCLUDE_AUDIO: \"veo3-include-audio\",\r\n  MOODBOARD_ENABLED: \"veo3-moodboard-enabled\",\r\n} as const;\r\n\r\nexport const DEFAULT_VALUES = {\r\n  CHARACTER_LIMIT: 4000,\r\n  LANGUAGE: \"English\",\r\n  INCLUDE_AUDIO: true,\r\n  MOODBOARD_ENABLED: true,\r\n  HISTORY_LIMIT: 10,\r\n} as const;\r\n","\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@turbo-super/ui\";\r\nimport { BookOpen } from \"lucide-react\";\r\nimport { PromptBuilder } from \"./PromptBuilder\";\r\nimport { PromptPreview } from \"./PromptPreview\";\r\nimport { AIEnhancement } from \"./AIEnhancement\";\r\nimport { PromptHistory } from \"./PromptHistory\";\r\nimport {\r\n  PromptData,\r\n  EnhancementInfo,\r\n  MoodboardImage,\r\n  PresetOptions,\r\n  HistoryItem,\r\n  Character,\r\n} from \"../types\";\r\nimport {\r\n  generatePrompt,\r\n  createRandomPromptData,\r\n  copyToClipboard as copyToClipboardUtil,\r\n  getLocaleLanguage,\r\n} from \"../utils\";\r\nimport { PRESET_OPTIONS, DEFAULT_VALUES } from \"../constants\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface Veo3PromptGeneratorProps {\r\n  enhancePromptFunction?: (params: {\r\n    prompt: string;\r\n    customLimit: number;\r\n    model: string;\r\n    focusType?: string;\r\n    includeAudio: boolean;\r\n    promptData: PromptData;\r\n    moodboard?: {\r\n      enabled: boolean;\r\n      images: MoodboardImage[];\r\n    };\r\n  }) => Promise<{\r\n    enhancedPrompt: string;\r\n    model?: string;\r\n    characterLimit?: number;\r\n    characterCount?: number;\r\n    targetCharacters?: number;\r\n    metadata?: any;\r\n  }>;\r\n  MoodboardUploader?: React.ComponentType<{\r\n    images: MoodboardImage[];\r\n    setImages: (images: MoodboardImage[]) => void;\r\n  }>;\r\n  showInfoBanner?: boolean;\r\n  className?: string;\r\n  locale?: Locale;\r\n  showPaymentButton?: boolean;\r\n}\r\n\r\nexport function Veo3PromptGenerator({\r\n  enhancePromptFunction,\r\n  MoodboardUploader,\r\n  showInfoBanner = true,\r\n  className = \"\",\r\n  locale = \"en\" as Locale,\r\n  showPaymentButton = true,\r\n}: Veo3PromptGeneratorProps) {\r\n  const { t } = useTranslation(locale);\r\n\r\n  const [promptData, setPromptData] = useState<PromptData>({\r\n    scene: \"\",\r\n    style: \"\",\r\n    camera: \"\",\r\n    characters: [{ id: \"default\", name: \"\", description: \"\", speech: \"\" }],\r\n    action: \"\",\r\n    lighting: \"\",\r\n    mood: \"\",\r\n    language: \"English\",\r\n  });\r\n  const [generatedPrompt, setGeneratedPrompt] = useState(\"\");\r\n  const [enhancedPrompt, setEnhancedPrompt] = useState(\"\");\r\n  const [isEnhancing, setIsEnhancing] = useState(false);\r\n  const [enhanceError, setEnhanceError] = useState(\"\");\r\n  const [customCharacterLimit, setCustomCharacterLimit] = useState<number>(\r\n    DEFAULT_VALUES.CHARACTER_LIMIT\r\n  );\r\n  const [selectedModel] = useState<\"gpt-4.1\">(\"gpt-4.1\");\r\n  const [promptHistory, setPromptHistory] = useState<HistoryItem[]>([]);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n  const [enhancementInfo, setEnhancementInfo] =\r\n    useState<EnhancementInfo | null>(null);\r\n  const [activeTab, setActiveTab] = useState(\"builder\");\r\n  const [selectedFocusTypes, setSelectedFocusTypes] = useState<\r\n    Array<\"character\" | \"action\" | \"cinematic\" | \"safe\">\r\n  >([\"safe\"]);\r\n  const [includeAudio, setIncludeAudio] = useState<boolean>(\r\n    DEFAULT_VALUES.INCLUDE_AUDIO\r\n  );\r\n  const [moodboardEnabled, setMoodboardEnabled] = useState<boolean>(\r\n    DEFAULT_VALUES.MOODBOARD_ENABLED\r\n  );\r\n  const [moodboardImages, setMoodboardImages] = useState<MoodboardImage[]>([]);\r\n\r\n  // Load history from localStorage\r\n  useEffect(() => {\r\n    const savedHistory = localStorage.getItem(\"veo3-prompt-history\");\r\n    if (savedHistory) {\r\n      try {\r\n        const parsed = JSON.parse(savedHistory);\r\n        const historyWithDates = parsed.map((item: any) => ({\r\n          ...item,\r\n          timestamp: new Date(item.timestamp),\r\n        }));\r\n        setPromptHistory(historyWithDates);\r\n      } catch (error) {\r\n        console.error(\"Failed to load prompt history:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save history to localStorage\r\n  useEffect(() => {\r\n    if (promptHistory.length > 0) {\r\n      localStorage.setItem(\r\n        \"veo3-prompt-history\",\r\n        JSON.stringify(promptHistory)\r\n      );\r\n    }\r\n  }, [promptHistory]);\r\n\r\n  // Generate prompt when promptData changes\r\n  useEffect(() => {\r\n    const hasValidCharacter = promptData.characters.some(\r\n      (char) => char.name || char.description\r\n    );\r\n    if (promptData.scene || hasValidCharacter) {\r\n      const prompt = generatePrompt(promptData);\r\n      setGeneratedPrompt(prompt);\r\n    }\r\n  }, [promptData]);\r\n\r\n  // Set language based on locale\r\n  useEffect(() => {\r\n    const defaultLanguage = getLocaleLanguage(locale);\r\n    setPromptData((prev) => ({ ...prev, language: defaultLanguage }));\r\n  }, [locale]);\r\n\r\n  const addCharacter = () => {\r\n    setPromptData((prev) => ({\r\n      ...prev,\r\n      characters: [\r\n        ...prev.characters,\r\n        { id: Date.now().toString(), name: \"\", description: \"\", speech: \"\" },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const updateCharacter = (\r\n    id: string,\r\n    field: keyof Character,\r\n    value: string\r\n  ) => {\r\n    setPromptData((prev) => ({\r\n      ...prev,\r\n      characters: prev.characters.map((char) =>\r\n        char.id === id ? { ...char, [field]: value } : char\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const removeCharacter = (id: string) => {\r\n    setPromptData((prev) => ({\r\n      ...prev,\r\n      characters: prev.characters.filter((char) => char.id !== id),\r\n    }));\r\n  };\r\n\r\n  const clearAll = () => {\r\n    const emptyData: PromptData = {\r\n      scene: \"\",\r\n      style: \"\",\r\n      camera: \"\",\r\n      characters: [],\r\n      action: \"\",\r\n      lighting: \"\",\r\n      mood: \"\",\r\n      language: \"English\",\r\n    };\r\n    setPromptData(emptyData);\r\n    setGeneratedPrompt(\"\");\r\n    setEnhancedPrompt(\"\");\r\n    setEnhanceError(\"\");\r\n  };\r\n\r\n  const saveToHistory = (\r\n    basicPrompt: string,\r\n    enhancedPrompt: string,\r\n    length: string,\r\n    model: string,\r\n    promptData: PromptData\r\n  ) => {\r\n    const newHistoryItem: HistoryItem = {\r\n      id: Date.now().toString(),\r\n      timestamp: new Date(),\r\n      basicPrompt,\r\n      enhancedPrompt,\r\n      length,\r\n      model,\r\n      promptData,\r\n    };\r\n    setPromptHistory((prev) => {\r\n      const updated = [newHistoryItem, ...prev];\r\n      return updated.slice(0, 10);\r\n    });\r\n  };\r\n\r\n  const clearHistory = () => {\r\n    setPromptHistory([]);\r\n    localStorage.removeItem(\"veo3-prompt-history\");\r\n  };\r\n\r\n  const randomizePrompt = () => {\r\n    const randomData = createRandomPromptData();\r\n    setPromptData(randomData);\r\n  };\r\n\r\n  const copyToClipboard = async (text: string) => {\r\n    const success = await copyToClipboardUtil(text);\r\n    if (success) {\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    }\r\n  };\r\n\r\n  const loadFromHistory = (historyItem: HistoryItem) => {\r\n    setPromptData(historyItem.promptData);\r\n    setGeneratedPrompt(historyItem.basicPrompt);\r\n    setEnhancedPrompt(historyItem.enhancedPrompt);\r\n    if (historyItem.length) {\r\n      const match = historyItem.length.match(/(\\d+)/);\r\n      if (match) {\r\n        const charLimit = parseInt(match[1]);\r\n        if (charLimit >= 200 && charLimit <= 10000) {\r\n          setCustomCharacterLimit(charLimit);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleFocusType = (\r\n    focusType: \"character\" | \"action\" | \"cinematic\" | \"safe\"\r\n  ) => {\r\n    setSelectedFocusTypes((prev) => {\r\n      if (prev.includes(focusType)) {\r\n        return prev.filter((type) => type !== focusType);\r\n      } else {\r\n        return [...prev, focusType];\r\n      }\r\n    });\r\n  };\r\n\r\n  const enhancePrompt = async (focusType?: string) => {\r\n    if (!enhancePromptFunction) {\r\n      console.warn(\"No enhance function provided\");\r\n      return;\r\n    }\r\n\r\n    let promptToEnhance = \"\";\r\n    if (activeTab === \"enhance\" && enhancedPrompt.trim()) {\r\n      promptToEnhance = enhancedPrompt.trim();\r\n    } else if (generatedPrompt.trim()) {\r\n      promptToEnhance = generatedPrompt.trim();\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    setIsEnhancing(true);\r\n    setEnhanceError(\"\");\r\n\r\n    try {\r\n      const data = await enhancePromptFunction({\r\n        prompt: promptToEnhance,\r\n        customLimit: customCharacterLimit,\r\n        model: selectedModel,\r\n        focusType: focusType,\r\n        includeAudio: includeAudio,\r\n        promptData: promptData,\r\n        ...(moodboardEnabled && moodboardImages.length > 0\r\n          ? {\r\n              moodboard: {\r\n                enabled: true,\r\n                images: moodboardImages.map((img) => ({\r\n                  id: img.id,\r\n                  url: img.url,\r\n                  base64: img.base64,\r\n                  tags: img.tags,\r\n                  description: img.description,\r\n                  weight: img.weight,\r\n                })),\r\n              },\r\n            }\r\n          : {}),\r\n      });\r\n\r\n      if (data.enhancedPrompt) {\r\n        setEnhancedPrompt(data.enhancedPrompt);\r\n        setEnhancementInfo({\r\n          model: data.model || selectedModel,\r\n          modelName: data.model || selectedModel,\r\n          length: `${data.characterLimit || customCharacterLimit} chars`,\r\n          actualCharacters: data.characterCount || data.enhancedPrompt.length,\r\n          targetCharacters: data.targetCharacters || customCharacterLimit,\r\n        });\r\n\r\n        const basicPromptForHistory =\r\n          activeTab === \"enhance\" && enhancedPrompt.trim()\r\n            ? promptToEnhance\r\n            : generatedPrompt;\r\n        saveToHistory(\r\n          basicPromptForHistory,\r\n          data.enhancedPrompt,\r\n          `${data.characterLimit || customCharacterLimit} chars`,\r\n          data.model || selectedModel,\r\n          promptData\r\n        );\r\n      } else {\r\n        throw new Error(\"No enhanced prompt received\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Enhancement error:\", error);\r\n      setEnhanceError(\r\n        error instanceof Error\r\n          ? error.message\r\n          : t(\"veo3PromptGenerator.aiEnhancement.enhanceError\")\r\n      );\r\n    } finally {\r\n      setIsEnhancing(false);\r\n    }\r\n  };\r\n\r\n  const enhanceWithSelectedFocus = async () => {\r\n    if (selectedFocusTypes.length === 0) {\r\n      await enhancePrompt();\r\n    } else {\r\n      await enhancePrompt(selectedFocusTypes.join(\",\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`w-full max-w-6xl mx-auto ${className}`}>\r\n      {/* Info Banner */}\r\n      {showInfoBanner && (\r\n        <div className=\"mb-6 p-4 bg-gradient-to-r from-green-50/10 to-blue-50/10 dark:from-green-950/20 dark:to-blue-950/20 border border-green-200/20 dark:border-green-600/20 rounded-lg\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className=\"flex-shrink-0 w-8 h-8 bg-green-100/20 dark:bg-green-900/30 rounded-full flex items-center justify-center\">\r\n              <BookOpen className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h3 className=\"font-semibold text-green-900 dark:text-green-100 mb-1\">\r\n                {t(\"veo3PromptGenerator.infoBanner.title\")}\r\n              </h3>\r\n              <p className=\"text-sm text-green-700 dark:text-green-300 mb-2\">\r\n                {t(\"veo3PromptGenerator.infoBanner.description\")}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs\r\n        value={activeTab}\r\n        onValueChange={setActiveTab}\r\n        className=\"space-y-6\"\r\n      >\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"builder\">\r\n            {t(\"veo3PromptGenerator.tabs.builder\")}\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"enhance\">\r\n            {t(\"veo3PromptGenerator.tabs.enhance\")}\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"history\">\r\n            {t(\"veo3PromptGenerator.tabs.history\")} ({promptHistory.length}/10)\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"builder\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <PromptBuilder\r\n              promptData={promptData}\r\n              setPromptData={setPromptData}\r\n              addCharacter={addCharacter}\r\n              updateCharacter={updateCharacter}\r\n              removeCharacter={removeCharacter}\r\n              presetOptions={PRESET_OPTIONS}\r\n              moodboardEnabled={moodboardEnabled}\r\n              setMoodboardEnabled={setMoodboardEnabled}\r\n              moodboardImages={moodboardImages}\r\n              setMoodboardImages={setMoodboardImages}\r\n              MoodboardUploader={MoodboardUploader || undefined}\r\n              locale={locale}\r\n            />\r\n            <PromptPreview\r\n              generatedPrompt={generatedPrompt}\r\n              setGeneratedPrompt={setGeneratedPrompt}\r\n              randomizePrompt={randomizePrompt}\r\n              clearAll={clearAll}\r\n              copyToClipboard={copyToClipboard}\r\n              copied={copied}\r\n              setActiveTab={setActiveTab}\r\n              isEnhancing={isEnhancing}\r\n              enhancePrompt={enhancePrompt}\r\n              locale={locale}\r\n            />\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"enhance\">\r\n          <AIEnhancement\r\n            enhancedPrompt={enhancedPrompt}\r\n            setEnhancedPrompt={setEnhancedPrompt}\r\n            generatedPrompt={generatedPrompt}\r\n            enhanceWithSelectedFocus={enhanceWithSelectedFocus}\r\n            isEnhancing={isEnhancing}\r\n            enhanceError={enhanceError}\r\n            enhancementInfo={enhancementInfo}\r\n            selectedFocusTypes={selectedFocusTypes}\r\n            toggleFocusType={toggleFocusType}\r\n            includeAudio={includeAudio}\r\n            setIncludeAudio={setIncludeAudio}\r\n            customCharacterLimit={customCharacterLimit}\r\n            setCustomCharacterLimit={setCustomCharacterLimit}\r\n            showSettings={showSettings}\r\n            setShowSettings={setShowSettings}\r\n            copied={copied}\r\n            copyToClipboard={copyToClipboard}\r\n            locale={locale}\r\n            showPaymentButton={showPaymentButton}\r\n          />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\">\r\n          <PromptHistory\r\n            promptHistory={promptHistory}\r\n            loadFromHistory={loadFromHistory}\r\n            clearHistory={clearHistory}\r\n            setActiveTab={setActiveTab}\r\n            locale={locale}\r\n          />\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n","export interface Character {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  speech: string;\r\n}\r\n\r\nexport interface PromptData {\r\n  scene: string;\r\n  style: string;\r\n  camera: string;\r\n  characters: Character[];\r\n  action: string;\r\n  lighting: string;\r\n  mood: string;\r\n  language: string;\r\n}\r\n\r\nexport interface EnhancementInfo {\r\n  model: string;\r\n  modelName: string;\r\n  length: string;\r\n  actualCharacters: number;\r\n  targetCharacters: number;\r\n}\r\n\r\nexport interface MoodboardImage {\r\n  id: string;\r\n  file?: File;\r\n  url?: string;\r\n  base64?: string;\r\n  tags: string[];\r\n  description: string;\r\n  weight: number;\r\n}\r\n\r\nexport interface PresetOptions {\r\n  styles: string[];\r\n  cameras: string[];\r\n  lighting: string[];\r\n  moods: string[];\r\n  languages: string[];\r\n}\r\n\r\nexport interface HistoryItem {\r\n  id: string;\r\n  timestamp: Date;\r\n  basicPrompt: string;\r\n  enhancedPrompt: string;\r\n  length: string;\r\n  model: string;\r\n  promptData: PromptData;\r\n}\r\n\r\n// Export types as values for JavaScript compatibility\r\nexport const PromptDataType = {} as PromptData;\r\nexport const MoodboardImageType = {} as MoodboardImage;\r\nexport const CharacterType = {} as Character;\r\nexport const EnhancementInfoType = {} as EnhancementInfo;\r\nexport const PresetOptionsType = {} as PresetOptions;\r\nexport const HistoryItemType = {} as HistoryItem;\r\n"]}