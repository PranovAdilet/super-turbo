{"version":3,"sources":["../src/utils/format.ts","../src/utils/validation.ts","../src/hooks/use-debounce.ts","../src/hooks/use-local-storage.ts","../src/hooks/use-media-query.ts","../src/hooks/use-click-outside.ts","../src/data/constants.ts","../src/payment/stripe-config.ts"],"sourcesContent":["// Форматирование дат\r\nexport function formatDate(\r\n  date: Date | string,\r\n  options?: Intl.DateTimeFormatOptions\r\n): string {\r\n  const dateObj = typeof date === \"string\" ? new Date(date) : date;\r\n  const defaultOptions: Intl.DateTimeFormatOptions = {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    ...options,\r\n  };\r\n  return dateObj.toLocaleDateString(\"ru-RU\", defaultOptions);\r\n}\r\n\r\nexport function formatDateTime(date: Date | string): string {\r\n  const dateObj = typeof date === \"string\" ? new Date(date) : date;\r\n  return dateObj.toLocaleString(\"ru-RU\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n}\r\n\r\nexport function formatRelativeTime(date: Date | string): string {\r\n  const dateObj = typeof date === \"string\" ? new Date(date) : date;\r\n  const now = new Date();\r\n  const diffInSeconds = Math.floor((now.getTime() - dateObj.getTime()) / 1000);\r\n\r\n  if (diffInSeconds < 60) {\r\n    return \"только что\";\r\n  }\r\n\r\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n  if (diffInMinutes < 60) {\r\n    return `${diffInMinutes} мин. назад`;\r\n  }\r\n\r\n  const diffInHours = Math.floor(diffInMinutes / 60);\r\n  if (diffInHours < 24) {\r\n    return `${diffInHours} ч. назад`;\r\n  }\r\n\r\n  const diffInDays = Math.floor(diffInHours / 24);\r\n  if (diffInDays < 7) {\r\n    return `${diffInDays} дн. назад`;\r\n  }\r\n\r\n  return formatDate(dateObj);\r\n}\r\n\r\n// Форматирование чисел\r\nexport function formatNumber(\r\n  num: number,\r\n  options?: Intl.NumberFormatOptions\r\n): string {\r\n  const defaultOptions: Intl.NumberFormatOptions = {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2,\r\n    ...options,\r\n  };\r\n  return num.toLocaleString(\"ru-RU\", defaultOptions);\r\n}\r\n\r\nexport function formatFileSize(bytes: number): string {\r\n  if (bytes === 0) return \"0 Б\";\r\n\r\n  const k = 1024;\r\n  const sizes = [\"Б\", \"КБ\", \"МБ\", \"ГБ\", \"ТБ\"];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\r\n}\r\n\r\nexport function formatDuration(seconds: number): string {\r\n  if (seconds < 60) {\r\n    return `${Math.floor(seconds)}с`;\r\n  }\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = Math.floor(seconds % 60);\r\n\r\n  if (minutes < 60) {\r\n    return `${minutes}м ${remainingSeconds}с`;\r\n  }\r\n\r\n  const hours = Math.floor(minutes / 60);\r\n  const remainingMinutes = minutes % 60;\r\n\r\n  return `${hours}ч ${remainingMinutes}м`;\r\n}\r\n\r\n// Форматирование текста\r\nexport function truncateText(\r\n  text: string,\r\n  maxLength: number,\r\n  suffix = \"...\"\r\n): string {\r\n  if (text.length <= maxLength) return text;\r\n  return text.slice(0, maxLength - suffix.length) + suffix;\r\n}\r\n\r\nexport function capitalizeFirst(text: string): string {\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n\r\nexport function slugify(text: string): string {\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, \"\")\r\n    .replace(/[\\s_-]+/g, \"-\")\r\n    .replace(/^-+|-+$/g, \"\");\r\n}\r\n\r\n// Форматирование валюты\r\nexport function formatCurrency(amount: number, currency = \"RUB\"): string {\r\n  return new Intl.NumberFormat(\"ru-RU\", {\r\n    style: \"currency\",\r\n    currency,\r\n  }).format(amount);\r\n}\r\n\r\n// Форматирование процентов\r\nexport function formatPercentage(value: number, decimals = 1): string {\r\n  return `${(value * 100).toFixed(decimals)}%`;\r\n}\r\n","/**\r\n * Проверяет, является ли строка валидным email\r\n */\r\nexport function isValidEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\n/**\r\n * Проверяет силу пароля\r\n */\r\nexport function isStrongPassword(password: string): boolean {\r\n  // Минимум 8 символов, содержит буквы и цифры\r\n  const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n  return passwordRegex.test(password);\r\n}\r\n\r\n/**\r\n * Проверяет, является ли строка валидным URL\r\n */\r\nexport function isValidUrl(url: string): boolean {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Валидация телефона\r\nexport function isValidPhone(phone: string): boolean {\r\n  const phoneRegex = /^[\\+]?[1-9][\\d]{0,15}$/;\r\n  return phoneRegex.test(phone.replace(/\\s/g, \"\"));\r\n}\r\n\r\n// Валидация пароля\r\nexport function isValidPassword(password: string): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n} {\r\n  const errors: string[] = [];\r\n\r\n  if (password.length < 8) {\r\n    errors.push(\"Пароль должен содержать минимум 8 символов\");\r\n  }\r\n\r\n  if (!/[A-Z]/.test(password)) {\r\n    errors.push(\"Пароль должен содержать заглавную букву\");\r\n  }\r\n\r\n  if (!/[a-z]/.test(password)) {\r\n    errors.push(\"Пароль должен содержать строчную букву\");\r\n  }\r\n\r\n  if (!/\\d/.test(password)) {\r\n    errors.push(\"Пароль должен содержать цифру\");\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n  };\r\n}\r\n\r\n// Валидация размера файла\r\nexport function isValidFileSize(fileSize: number, maxSize: number): boolean {\r\n  return fileSize <= maxSize;\r\n}\r\n\r\n// Валидация типа файла\r\nexport function isValidFileType(\r\n  fileName: string,\r\n  allowedTypes: string[]\r\n): boolean {\r\n  const extension = fileName.split(\".\").pop()?.toLowerCase();\r\n  return extension ? allowedTypes.includes(extension) : false;\r\n}\r\n\r\n// Валидация длины текста\r\nexport function isValidTextLength(\r\n  text: string,\r\n  minLength: number,\r\n  maxLength: number\r\n): boolean {\r\n  return text.length >= minLength && text.length <= maxLength;\r\n}\r\n\r\n// Валидация обязательных полей\r\nexport function validateRequired(value: any, fieldName: string): string | null {\r\n  if (value === null || value === undefined || value === \"\") {\r\n    return `${fieldName} обязателен`;\r\n  }\r\n  return null;\r\n}\r\n\r\n// Валидация объекта\r\nexport function validateObject<T extends Record<string, any>>(\r\n  obj: T,\r\n  validators: Record<keyof T, (value: any) => string | null>\r\n): Record<keyof T, string | null> {\r\n  const errors: Record<keyof T, string | null> = {} as Record<\r\n    keyof T,\r\n    string | null\r\n  >;\r\n\r\n  for (const [key, validator] of Object.entries(validators)) {\r\n    errors[key as keyof T] = validator(obj[key as keyof T]);\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n// Проверка наличия ошибок\r\nexport function hasErrors(errors: Record<string, string | null>): boolean {\r\n  return Object.values(errors).some((error) => error !== null);\r\n}\r\n\r\n// Валидация ID\r\nexport function isValidId(id: string): boolean {\r\n  return /^[a-zA-Z0-9-_]+$/.test(id) && id.length > 0;\r\n}\r\n\r\n// Валидация UUID\r\nexport function isValidUUID(uuid: string): boolean {\r\n  const uuidRegex =\r\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n  return uuidRegex.test(uuid);\r\n}\r\n\r\n// Валидация даты\r\nexport function isValidDate(date: string): boolean {\r\n  const dateObj = new Date(date);\r\n  return !isNaN(dateObj.getTime());\r\n}\r\n\r\n// Валидация числа в диапазоне\r\nexport function isValidNumberRange(\r\n  value: number,\r\n  min: number,\r\n  max: number\r\n): boolean {\r\n  return value >= min && value <= max;\r\n}\r\n\r\n// Валидация массива\r\nexport function isValidArray<T>(\r\n  array: T[],\r\n  minLength = 0,\r\n  maxLength?: number\r\n): boolean {\r\n  if (!Array.isArray(array)) return false;\r\n  if (array.length < minLength) return false;\r\n  if (maxLength && array.length > maxLength) return false;\r\n  return true;\r\n}\r\n","\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Хук для дебаунса значения\r\n */\r\nexport function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport function useLocalStorage<T>(key: string, initialValue: T) {\r\n  // Получаем значение из localStorage или используем начальное значение\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.error(`Error reading localStorage key \"${key}\":`, error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Функция для установки значения\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // Позволяем value быть функцией, чтобы у нас была та же API, что и useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n\r\n      // Сохраняем в localStorage\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error setting localStorage key \"${key}\":`, error);\r\n    }\r\n  };\r\n\r\n  // Удаляем значение из localStorage\r\n  const removeValue = () => {\r\n    try {\r\n      setStoredValue(initialValue);\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.removeItem(key);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error removing localStorage key \"${key}\":`, error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue, removeValue] as const;\r\n}\r\n","\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport function useMediaQuery(query: string): boolean {\r\n  const [matches, setMatches] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    const media = window.matchMedia(query);\r\n\r\n    // Устанавливаем начальное значение\r\n    setMatches(media.matches);\r\n\r\n    // Создаем функцию-обработчик\r\n    const listener = (event: MediaQueryListEvent) => {\r\n      setMatches(event.matches);\r\n    };\r\n\r\n    // Добавляем слушатель\r\n    media.addEventListener(\"change\", listener);\r\n\r\n    // Очищаем слушатель при размонтировании\r\n    return () => media.removeEventListener(\"change\", listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n}\r\n\r\n// Предопределенные медиа-запросы\r\nexport const useIsMobile = () => useMediaQuery(\"(max-width: 768px)\");\r\nexport const useIsTablet = () =>\r\n  useMediaQuery(\"(min-width: 769px) and (max-width: 1024px)\");\r\nexport const useIsDesktop = () => useMediaQuery(\"(min-width: 1025px)\");\r\nexport const useIsDarkMode = () =>\r\n  useMediaQuery(\"(prefers-color-scheme: dark)\");\r\nexport const useIsReducedMotion = () =>\r\n  useMediaQuery(\"(prefers-reduced-motion: reduce)\");\r\n","\"use client\";\r\n\r\nimport { useEffect, RefObject } from \"react\";\r\n\r\nexport function useClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: MouseEvent | TouchEvent) => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: MouseEvent | TouchEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Не выполняем обработчик, если клик был внутри элемента\r\n      if (!el || el.contains((event?.target as Node) || null)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    // Добавляем слушатели событий\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    // Очищаем слушатели при размонтировании\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n}\r\n","// Константы для моделей AI\r\nexport const AI_MODELS = {\r\n  TEXT: {\r\n    GPT_4: \"gpt-4\",\r\n    GPT_3_5_TURBO: \"gpt-3.5-turbo\",\r\n    CLAUDE_3_OPUS: \"claude-3-opus-20240229\",\r\n    CLAUDE_3_SONNET: \"claude-3-sonnet-20240229\",\r\n    CLAUDE_3_HAIKU: \"claude-3-haiku-20240307\",\r\n  },\r\n  IMAGE: {\r\n    DALL_E_3: \"dall-e-3\",\r\n    DALL_E_2: \"dall-e-2\",\r\n    MIDJOURNEY: \"midjourney\",\r\n    STABLE_DIFFUSION: \"stable-diffusion\",\r\n  },\r\n  VIDEO: {\r\n    SORA: \"sora\",\r\n    VEOLABS: \"veolabs\",\r\n    RUNWAY: \"runway\",\r\n    PIKA: \"pika\",\r\n  },\r\n} as const;\r\n\r\n// Константы для статусов\r\nexport const STATUS = {\r\n  PENDING: \"pending\",\r\n  PROCESSING: \"processing\",\r\n  COMPLETED: \"completed\",\r\n  FAILED: \"failed\",\r\n  CANCELLED: \"cancelled\",\r\n} as const;\r\n\r\n// Константы для типов артефактов\r\nexport const ARTIFACT_TYPES = {\r\n  IMAGE: \"image\",\r\n  VIDEO: \"video\",\r\n  TEXT: \"text\",\r\n  SHEET: \"sheet\",\r\n  SCRIPT: \"script\",\r\n} as const;\r\n\r\n// Константы для ролей пользователей\r\nexport const USER_ROLES = {\r\n  USER: \"user\",\r\n  ADMIN: \"admin\",\r\n} as const;\r\n\r\n// Константы для ролей сообщений\r\nexport const MESSAGE_ROLES = {\r\n  USER: \"user\",\r\n  ASSISTANT: \"assistant\",\r\n  SYSTEM: \"system\",\r\n} as const;\r\n\r\n// Константы для API\r\nexport const API_ENDPOINTS = {\r\n  ARTIFACTS: \"/api/artifacts\",\r\n  CHATS: \"/api/chats\",\r\n  USERS: \"/api/users\",\r\n  AUTH: \"/api/auth\",\r\n} as const;\r\n\r\n// Константы для размеров изображений\r\nexport const IMAGE_SIZES = {\r\n  THUMBNAIL: { width: 150, height: 150 },\r\n  SMALL: { width: 512, height: 512 },\r\n  MEDIUM: { width: 1024, height: 1024 },\r\n  LARGE: { width: 1792, height: 1024 },\r\n} as const;\r\n\r\n// Константы для размеров видео\r\nexport const VIDEO_SIZES = {\r\n  SMALL: { width: 512, height: 512 },\r\n  MEDIUM: { width: 1024, height: 1024 },\r\n  LARGE: { width: 1792, height: 1024 },\r\n} as const;\r\n\r\n// Константы для форматов файлов\r\nexport const FILE_FORMATS = {\r\n  IMAGE: [\"jpg\", \"jpeg\", \"png\", \"webp\", \"gif\"],\r\n  VIDEO: [\"mp4\", \"webm\", \"mov\", \"avi\"],\r\n  DOCUMENT: [\"pdf\", \"doc\", \"docx\", \"txt\"],\r\n  SPREADSHEET: [\"csv\", \"xlsx\", \"xls\"],\r\n} as const;\r\n\r\n// Константы для лимитов\r\nexport const LIMITS = {\r\n  MAX_FILE_SIZE: 100 * 1024 * 1024, // 100MB\r\n  MAX_MESSAGE_LENGTH: 10000,\r\n  MAX_TITLE_LENGTH: 200,\r\n  MAX_DESCRIPTION_LENGTH: 1000,\r\n  MAX_CHAT_MESSAGES: 1000,\r\n} as const;\r\n\r\n// Константы для пагинации\r\nexport const PAGINATION = {\r\n  DEFAULT_PAGE: 1,\r\n  DEFAULT_LIMIT: 20,\r\n  MAX_LIMIT: 100,\r\n} as const;\r\n\r\n// Константы для времени\r\nexport const TIME = {\r\n  SECOND: 1000,\r\n  MINUTE: 60 * 1000,\r\n  HOUR: 60 * 60 * 1000,\r\n  DAY: 24 * 60 * 60 * 1000,\r\n  SESSION_TIMEOUT: 24 * 60 * 60 * 1000, // 24 часа\r\n  TOKEN_EXPIRY: 7 * 24 * 60 * 60 * 1000, // 7 дней\r\n  CACHE_TTL: 5 * 60 * 1000, // 5 минут\r\n} as const;\r\n\r\n// Константы для кодов ошибок\r\nexport const ERROR_CODES = {\r\n  VALIDATION_ERROR: \"VALIDATION_ERROR\",\r\n  AUTHENTICATION_ERROR: \"AUTHENTICATION_ERROR\",\r\n  AUTHORIZATION_ERROR: \"AUTHORIZATION_ERROR\",\r\n  NOT_FOUND_ERROR: \"NOT_FOUND_ERROR\",\r\n  INTERNAL_ERROR: \"INTERNAL_ERROR\",\r\n  UNAUTHORIZED: \"UNAUTHORIZED\",\r\n  FORBIDDEN: \"FORBIDDEN\",\r\n  NOT_FOUND: \"NOT_FOUND\",\r\n  RATE_LIMIT_EXCEEDED: \"RATE_LIMIT_EXCEEDED\",\r\n  INTERNAL_SERVER_ERROR: \"INTERNAL_SERVER_ERROR\",\r\n} as const;\r\n\r\n// Константы для типов уведомлений\r\nexport const NOTIFICATION_TYPES = {\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n  WARNING: \"warning\",\r\n  INFO: \"info\",\r\n} as const;\r\n\r\n// Константы для URL приложения\r\nexport const APP_URLS = {\r\n  ABOUT_URL: \"/about\",\r\n  PRICING_URL: \"/pricing\",\r\n  TERMS_URL: \"/terms\",\r\n  PRIVACY_URL: \"/privacy\",\r\n  EDITOR_URL: \"/editor\",\r\n  CALENDLY_URL: \"https://calendly.com/superduperai\",\r\n  INSTAGRAM_URL: \"https://instagram.com/superduperai\",\r\n  TELEGRAM_URL: \"https://t.me/superduperai\",\r\n  DISCORD_URL: \"https://discord.gg/superduperai\",\r\n  YOUTUBE_URL: \"https://youtube.com/@superduperai\",\r\n  TIKTOK_URL: \"https://tiktok.com/@superduperai\",\r\n  LINKEDIN_URL: \"https://linkedin.com/company/superduperai\",\r\n} as const;\r\n\r\n// Регулярные выражения\r\nexport const guestRegex = /^guest-\\d+@superduperai\\.com$/;\r\n","/**\r\n * Общая конфигурация Stripe для turbo-super\r\n * Автоматически выбирает правильные цены на основе окружения\r\n */\r\n\r\nexport interface StripePrices {\r\n  single: string;\r\n  triple: string;\r\n}\r\n\r\nexport interface StripeConfig {\r\n  prices: StripePrices;\r\n  mode: \"live\" | \"test\";\r\n}\r\n\r\nexport const STRIPE_PRICES = {\r\n  // Production prices (live mode)\r\n  production: {\r\n    single: \"price_1Rkse5K9tHMoWhKiQ0tg0b2N\", // $1.00 for 1 video\r\n    triple: \"price_1Rkse7K9tHMoWhKise2iYOXL\", // $2.00 for 3 videos\r\n  },\r\n  // Test prices (test mode)\r\n  test: {\r\n    single: \"price_1RktnoK9tHMoWhKim5uqXiAe\", // $1.00 for 1 video (TEST)\r\n    triple: \"price_1Rkto1K9tHMoWhKinvpEwntH\", // $2.00 for 3 videos (TEST)\r\n  },\r\n};\r\n\r\n// Auto-select prices based on environment\r\nexport const getCurrentPrices = (): StripePrices => {\r\n  const isLiveMode = process.env.STRIPE_SECRET_KEY?.startsWith(\"sk_live_\");\r\n\r\n  if (isLiveMode) {\r\n    return STRIPE_PRICES.production;\r\n  }\r\n  return STRIPE_PRICES.test;\r\n};\r\n\r\n// Helper functions\r\nexport const getSingleVideoPrice = (): string => getCurrentPrices().single;\r\nexport const getTripleVideoPrice = (): string => getCurrentPrices().triple;\r\n\r\n// Export current prices for easy access\r\nexport const CURRENT_PRICES = getCurrentPrices();\r\n\r\n// Get current mode\r\nexport const getCurrentMode = (): \"live\" | \"test\" => {\r\n  const isLiveMode = process.env.STRIPE_SECRET_KEY?.startsWith(\"sk_live_\");\r\n  return isLiveMode ? \"live\" : \"test\";\r\n};\r\n\r\n// Get full config\r\nexport const getStripeConfig = (): StripeConfig => ({\r\n  prices: getCurrentPrices(),\r\n  mode: getCurrentMode(),\r\n});\r\n\r\n// Log current configuration in development\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(\"🏪 Stripe Configuration:\", {\r\n    isLiveMode: getCurrentMode() === \"live\",\r\n    currentPrices: CURRENT_PRICES,\r\n    mode: getCurrentMode(),\r\n  });\r\n}\r\n"],"mappings":"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","names":["useState","useState","useEffect","useEffect"]}