{"version":3,"sources":["../src/superduperai/client.ts","../src/superduperai/types.ts","../src/superduperai/endpoints.ts","../src/superduperai/config.ts","../src/stripe/client.ts","../src/stripe/endpoints.ts","../src/upload/client.ts","../src/websocket/client.ts"],"names":["config","GenerationType","ListOrder","axios","API_ENDPOINTS"],"mappings":"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","file":"index.mjs","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { API_ENDPOINTS } from '@turbo-super/core';\r\n\r\nexport class SuperDuperAIClient {\r\n  private client: AxiosInstance;\r\n\r\n  constructor(config?: AxiosRequestConfig) {\r\n    this.client = axios.create({\r\n      baseURL: API_ENDPOINTS.SUPERDUPERAI_BASE_URL,\r\n      timeout: 30000,\r\n      ...config,\r\n    });\r\n\r\n    // Add request interceptor for authentication\r\n    this.client.interceptors.request.use((config) => {\r\n      // Add auth headers if needed\r\n      return config;\r\n    });\r\n\r\n    // Add response interceptor for error handling\r\n    this.client.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        // Handle common errors\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Generic request method\r\n  async request<T>(config: AxiosRequestConfig): Promise<T> {\r\n    const response = await this.client.request<T>(config);\r\n    return response.data;\r\n  }\r\n\r\n  // Get the underlying axios instance\r\n  getAxiosInstance(): AxiosInstance {\r\n    return this.client;\r\n  }\r\n}\r\n\r\n// Export default instance\r\nexport const superDuperAIClient = new SuperDuperAIClient();\r\n","// SuperDuperAI API types\r\n\r\nexport interface APIResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface AuthCredentials {\r\n  token: string;\r\n  userId?: string;\r\n}\r\n\r\nexport interface GenerationRequest {\r\n  prompt: string;\r\n  model: string;\r\n  parameters?: Record<string, any>;\r\n  userId?: string;\r\n  sessionId?: string;\r\n}\r\n\r\nexport interface GenerationResponse {\r\n  id: string;\r\n  status: 'pending' | 'processing' | 'completed' | 'failed';\r\n  result?: any;\r\n  error?: string;\r\n  progress?: number;\r\n}\r\n\r\nexport interface ModelConfig {\r\n  name: string;\r\n  type: string;\r\n  source: string;\r\n  params?: {\r\n    workflow_path?: string;\r\n    price?: number;\r\n    max_duration?: number;\r\n    max_resolution?: { width: number; height: number };\r\n    supported_frame_rates?: number[];\r\n    supported_aspect_ratios?: string[];\r\n    supported_qualities?: string[];\r\n  };\r\n}\r\n\r\nexport interface GenerationConfig {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  source: string;\r\n  params?: Record<string, any>;\r\n}\r\n\r\nexport interface VideoModel extends ModelConfig {}\r\nexport interface ImageModel extends ModelConfig {}\r\n\r\nexport enum GenerationType {\r\n  TEXT_TO_IMAGE = \"text_to_image\",\r\n  IMAGE_TO_IMAGE = \"image_to_image\",\r\n  TEXT_TO_VIDEO = \"text_to_video\",\r\n  IMAGE_TO_VIDEO = \"image_to_video\",\r\n  VIDEO_TO_VIDEO = \"video_to_video\"\r\n}\r\n\r\nexport enum ListOrder {\r\n  ASC = \"asc\",\r\n  DESC = \"desc\"\r\n}\r\n","// SuperDuperAI API endpoints\r\n\r\nexport const ENDPOINTS = {\r\n  // Base endpoints\r\n  BASE: \"/api\",\r\n  \r\n  // Generation endpoints\r\n  GENERATE_IMAGE: \"/api/generate/image\",\r\n  GENERATE_VIDEO: \"/api/generate/video\",\r\n  GENERATE_SCRIPT: \"/api/generate/script\",\r\n  \r\n  // Configuration endpoints\r\n  CONFIG_MODELS: \"/api/config/models\",\r\n  CONFIG_SUPERDUPERAI: \"/api/config/superduperai\",\r\n  CONFIG_GENERATION: \"/api/config/generation\",\r\n  \r\n  // File endpoints\r\n  FILE_UPLOAD: \"/api/files/upload\",\r\n  FILE_DOWNLOAD: \"/api/file\",\r\n  \r\n  // Project endpoints\r\n  PROJECT_CREATE: \"/api/project\",\r\n  PROJECT_VIDEO: \"/api/project/video\",\r\n  \r\n  // User endpoints\r\n  USER_BALANCE: \"/api/user/balance\",\r\n  USER_HISTORY: \"/api/history\",\r\n  \r\n  // Enhancement endpoints\r\n  ENHANCE_PROMPT: \"/api/enhance-prompt\",\r\n  \r\n  // Event endpoints\r\n  EVENTS_FILE: \"/api/events/file\",\r\n  \r\n  // WebSocket endpoints\r\n  WEBSOCKET_BASE: \"wss://ws.superduperai.co\",\r\n  WEBSOCKET_CHAT: \"wss://ws.superduperai.co/chat\",\r\n  WEBSOCKET_GENERATION: \"wss://ws.superduperai.co/generation\"\r\n} as const;\r\n\r\nexport const API_ROUTES = {\r\n  // Next.js API routes\r\n  NEXT: {\r\n    GENERATE_IMAGE: \"/api/generate/image\",\r\n    GENERATE_VIDEO: \"/api/generate/video\",\r\n    GENERATE_SCRIPT: \"/api/generate/script\",\r\n    FILE: (id: string) => `/api/file/${id}`,\r\n    FILE_UPLOAD: \"/api/file/upload\",\r\n    PROJECT: (id: string) => `/api/project/${id}`,\r\n    PROJECT_VIDEO: \"/api/project/video\",\r\n    ENHANCE_PROMPT: \"/api/enhance-prompt\",\r\n    MODELS: \"/api/config/models\",\r\n    SUPERDUPERAI: \"/api/config/superduperai\",\r\n    EVENTS_FILE: (fileId: string) => `/api/events/file.${fileId}`,\r\n  }\r\n} as const;\r\n","// SuperDuperAI API Configuration\r\n\r\nexport interface SuperduperAIConfig {\r\n  url: string;\r\n  token: string;\r\n  wsURL: string; // Deprecated - kept for backward compatibility\r\n}\r\n\r\n// Cache for models with 1-hour expiration\r\nconst modelCache = new Map<\r\n  string,\r\n  { data: any[]; timestamp: number }\r\n>();\r\nconst CACHE_DURATION = 60 * 60 * 1000; // 1 hour\r\n\r\n/**\r\n * Validate Bearer token format\r\n * Ensures token is properly formatted for API authentication\r\n */\r\nexport function validateBearerToken(token: string): boolean {\r\n  // Remove 'Bearer ' prefix if present\r\n  const cleanToken = token.replace(/^Bearer\\s+/i, \"\");\r\n\r\n  // Basic validation: alphanumeric characters, minimum length\r\n  const tokenRegex = /^[a-zA-Z0-9_-]{32,}$/;\r\n\r\n  if (!tokenRegex.test(cleanToken)) {\r\n    console.warn(\"Token validation failed: Invalid format\");\r\n    return false;\r\n  }\r\n\r\n  // Additional checks can be added here (expiration, JWT validation, etc.)\r\n  return true;\r\n}\r\n\r\n/**\r\n * Get SuperDuperAI configuration\r\n */\r\nexport function getSuperduperAIConfig(): SuperduperAIConfig {\r\n  if (typeof window === \"undefined\") {\r\n    // Server-side: Real external API\r\n    const url = \"https://dev-editor.superduperai.co\";\r\n    const token = \"\"; // Will be set by environment\r\n    const wsURL = url.replace(\"https://\", \"wss://\").replace(\"http://\", \"ws://\");\r\n\r\n    if (!token) {\r\n      throw new Error(\"SUPERDUPERAI_TOKEN environment variable is required\");\r\n    }\r\n\r\n    // Token validation for Bearer token format\r\n    if (!validateBearerToken(token)) {\r\n      throw new Error(\r\n        \"SUPERDUPERAI_TOKEN must be a valid format. Expected: alphanumeric string, 32+ characters\"\r\n      );\r\n    }\r\n\r\n    return { url, token, wsURL };\r\n  }\r\n\r\n  // Client-side: Use current origin for proxy paths\r\n  const currentOrigin =\r\n    typeof window !== \"undefined\" ? window.location.origin : \"\";\r\n  return {\r\n    url: currentOrigin, // Use current origin for proxy paths\r\n    token: \"\", // Never expose tokens to client\r\n    wsURL: \"\", // Deprecated\r\n  };\r\n}\r\n\r\n/**\r\n * Client-side function to get config from API\r\n */\r\nexport async function getClientSuperduperAIConfig(): Promise<SuperduperAIConfig> {\r\n  try {\r\n    const response = await fetch(\"/api/config/superduperai\");\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to get SuperDuperAI config\");\r\n    }\r\n    const data = await response.json();\r\n\r\n    return {\r\n      url: data.url,\r\n      token: \"\", // Token is handled server-side\r\n      wsURL: data.wsURL,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Failed to get client config:\", error);\r\n    // Fallback to default\r\n    return getSuperduperAIConfig();\r\n  }\r\n}\r\n\r\n/**\r\n * Get cached models or fetch from API\r\n */\r\nexport async function getCachedModels<T>(\r\n  cacheKey: string,\r\n  fetchFunction: () => Promise<T[]>\r\n): Promise<T[]> {\r\n  const now = Date.now();\r\n  const cached = modelCache.get(cacheKey);\r\n\r\n  // Return cached data if still valid\r\n  if (cached && now - cached.timestamp < CACHE_DURATION) {\r\n    return cached.data as T[];\r\n  }\r\n\r\n  try {\r\n    // Fetch fresh data\r\n    const data = await fetchFunction();\r\n    \r\n    // Cache the new data\r\n    modelCache.set(cacheKey, { data, timestamp: now });\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Failed to fetch ${cacheKey}:`, error);\r\n    \r\n    // Return cached data if available, even if expired\r\n    if (cached) {\r\n      return cached.data as T[];\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Clear model cache\r\n */\r\nexport function clearModelCache(): void {\r\n  modelCache.clear();\r\n}\r\n\r\n/**\r\n * Get cache statistics\r\n */\r\nexport function getCacheStats() {\r\n  const now = Date.now();\r\n  const stats = {\r\n    totalEntries: modelCache.size,\r\n    validEntries: 0,\r\n    expiredEntries: 0,\r\n    totalSize: 0\r\n  };\r\n\r\n  for (const [key, value] of modelCache.entries()) {\r\n    if (now - value.timestamp < CACHE_DURATION) {\r\n      stats.validEntries++;\r\n    } else {\r\n      stats.expiredEntries++;\r\n    }\r\n    stats.totalSize += JSON.stringify(value.data).length;\r\n  }\r\n\r\n  return stats;\r\n}\r\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { API_ENDPOINTS } from '@turbo-super/core';\r\n\r\nexport class StripeClient {\r\n  private client: AxiosInstance;\r\n\r\n  constructor(config?: AxiosRequestConfig) {\r\n    this.client = axios.create({\r\n      baseURL: API_ENDPOINTS.STRIPE_BASE_URL,\r\n      timeout: 30000,\r\n      ...config,\r\n    });\r\n\r\n    // Add request interceptor for authentication\r\n    this.client.interceptors.request.use((config) => {\r\n      // Add Stripe auth headers if needed\r\n      return config;\r\n    });\r\n\r\n    // Add response interceptor for error handling\r\n    this.client.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        // Handle Stripe-specific errors\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Generic request method\r\n  async request<T>(config: AxiosRequestConfig): Promise<T> {\r\n    const response = await this.client.request<T>(config);\r\n    return response.data;\r\n  }\r\n\r\n  // Get the underlying axios instance\r\n  getAxiosInstance(): AxiosInstance {\r\n    return this.client;\r\n  }\r\n}\r\n\r\n// Export default instance\r\nexport const stripeClient = new StripeClient();\r\n","// Stripe API endpoint constants\r\nexport const STRIPE_ENDPOINTS = {\r\n  // Customers\r\n  CUSTOMERS: {\r\n    CREATE: \"/customers\",\r\n    GET: \"/customers/:id\",\r\n    UPDATE: \"/customers/:id\",\r\n    DELETE: \"/customers/:id\",\r\n  },\r\n\r\n  // Subscriptions\r\n  SUBSCRIPTIONS: {\r\n    CREATE: \"/subscriptions\",\r\n    GET: \"/subscriptions/:id\",\r\n    UPDATE: \"/subscriptions/:id\",\r\n    CANCEL: \"/subscriptions/:id/cancel\",\r\n  },\r\n\r\n  // Prices\r\n  PRICES: {\r\n    LIST: \"/prices\",\r\n    GET: \"/prices/:id\",\r\n  },\r\n\r\n  // Checkout\r\n  CHECKOUT: {\r\n    SESSIONS: \"/checkout/sessions\",\r\n    SESSION: \"/checkout/sessions/:id\",\r\n  },\r\n} as const;\r\n","import axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\r\nimport { API_ENDPOINTS } from \"@turbo-super/core\";\r\n\r\nexport class UploadClient {\r\n  private client: AxiosInstance;\r\n\r\n  constructor(config?: AxiosRequestConfig) {\r\n    this.client = axios.create({\r\n      baseURL: API_ENDPOINTS.UPLOAD_BASE_URL,\r\n      timeout: 60000, // Longer timeout for file uploads\r\n      ...config,\r\n    });\r\n\r\n    // Add request interceptor for authentication\r\n    this.client.interceptors.request.use((config) => {\r\n      // Add auth headers if needed\r\n      return config;\r\n    });\r\n\r\n    // Add response interceptor for error handling\r\n    this.client.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        // Handle upload-specific errors\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Generic request method\r\n  async request<T>(config: AxiosRequestConfig): Promise<T> {\r\n    const response = await this.client.request<T>(config);\r\n    return response.data;\r\n  }\r\n\r\n  // Get the underlying axios instance\r\n  getAxiosInstance(): AxiosInstance {\r\n    return this.client;\r\n  }\r\n}\r\n\r\n// Export default instance\r\nexport const uploadClient = new UploadClient();\r\n","import { API_ENDPOINTS } from \"@turbo-super/core\";\r\n\r\nexport class WebSocketClient {\r\n  private socket: WebSocket | null = null;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private reconnectDelay = 1000;\r\n\r\n  constructor(\r\n    private url: string = API_ENDPOINTS.WEBSOCKET_BASE_URL,\r\n    private options: {\r\n      onMessage?: (data: any) => void;\r\n      onOpen?: () => void;\r\n      onClose?: () => void;\r\n      onError?: (error: Event) => void;\r\n    } = {}\r\n  ) {}\r\n\r\n  connect(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.socket = new WebSocket(this.url);\r\n\r\n        this.socket.onopen = () => {\r\n          this.reconnectAttempts = 0;\r\n          this.options.onOpen?.();\r\n          resolve();\r\n        };\r\n\r\n        this.socket.onmessage = (event) => {\r\n          try {\r\n            const data = JSON.parse(event.data);\r\n            this.options.onMessage?.(data);\r\n          } catch (error) {\r\n            console.error(\"Failed to parse WebSocket message:\", error);\r\n          }\r\n        };\r\n\r\n        this.socket.onclose = () => {\r\n          this.options.onClose?.();\r\n          this.attemptReconnect();\r\n        };\r\n\r\n        this.socket.onerror = (error) => {\r\n          this.options.onError?.(error);\r\n          reject(error);\r\n        };\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private attemptReconnect(): void {\r\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\r\n      this.reconnectAttempts++;\r\n      setTimeout(() => {\r\n        this.connect().catch(console.error);\r\n      }, this.reconnectDelay * this.reconnectAttempts);\r\n    }\r\n  }\r\n\r\n  send(data: any): void {\r\n    if (this.socket?.readyState === WebSocket.OPEN) {\r\n      this.socket.send(JSON.stringify(data));\r\n    }\r\n  }\r\n\r\n  disconnect(): void {\r\n    if (this.socket) {\r\n      this.socket.close();\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  isConnected(): boolean {\r\n    return this.socket?.readyState === WebSocket.OPEN;\r\n  }\r\n}\r\n\r\n// Export default instance\r\nexport const webSocketClient = new WebSocketClient();\r\n"]}