{"version":3,"sources":["../src/constants/app.ts","../src/constants/api.ts","../src/constants/common.ts","../src/constants/config.ts","../src/constants/video.ts","../src/constants/video-models.ts","../src/constants/media-settings.ts","../src/utils/validation.ts","../src/utils/formatting.ts","../src/utils/files.ts"],"sourcesContent":["// Application specific constants\n\nexport const APP_CONFIG = {\n  MAX_FILE_SIZE: 100 * 1024 * 1024, // 100MB\n  MAX_IMAGE_SIZE: 10 * 1024 * 1024, // 10MB\n  MAX_VIDEO_SIZE: 500 * 1024 * 1024, // 500MB\n  SUPPORTED_IMAGE_FORMATS: ['png', 'jpg', 'jpeg', 'webp'],\n  SUPPORTED_VIDEO_FORMATS: ['mp4', 'mov', 'avi'],\n} as const;\n\nexport const UI_CONFIG = {\n  ANIMATION_DURATION: 300, // ms\n  DEBOUNCE_DELAY: 300, // ms\n  TOAST_DURATION: 5000, // ms\n  PAGINATION_DEFAULT_SIZE: 20,\n} as const;\n\nexport const FEATURE_FLAGS = {\n  ENABLE_VIDEO_GENERATION: true,\n  ENABLE_IMAGE_EDITING: true,\n  ENABLE_AI_CHAT: true,\n  ENABLE_PAYMENTS: true,\n} as const;\n\n","// API related constants\n\nexport const API_CONFIG = {\n  TIMEOUT: 30000, // 30 seconds\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n} as const;\n\nexport const HTTP_STATUS = {\n  OK: 200,\n  CREATED: 201,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n  GATEWAY_TIMEOUT: 504,\n} as const;\n\nexport const API_HEADERS = {\n  CONTENT_TYPE: 'Content-Type',\n  AUTHORIZATION: 'Authorization',\n  USER_AGENT: 'User-Agent',\n} as const;\n\nexport const API_METHODS = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n  PATCH: 'PATCH',\n} as const;\n\n","// Common constants used across both super-chatbot and super-landing\n\nexport const APP_NAME = \"SuperDuperAI\";\nexport const APP_VERSION = \"3.0.0\";\n\n// Environment\nexport const ENV = {\n  DEVELOPMENT: \"development\",\n  PRODUCTION: \"production\",\n  TEST: \"test\",\n} as const;\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  // Internal API endpoints\n  AUTH: \"/api/auth\",\n  UPLOAD: \"/api/files/upload\",\n  GENERATE: \"/api/generate\",\n  BALANCE: \"/api/user/balance\",\n\n  // External API base URLs\n  SUPERDUPERAI_BASE_URL:\n    process.env.SUPERDUPERAI_API_URL || \"https://api.superduperai.co\",\n  STRIPE_BASE_URL: process.env.STRIPE_API_URL || \"https://api.stripe.com\",\n  UPLOAD_BASE_URL: process.env.UPLOAD_API_URL || \"/api/files\",\n  WEBSOCKET_BASE_URL:\n    process.env.WEBSOCKET_API_URL || \"wss://ws.superduperai.co\",\n} as const;\n\n// File types\nexport const FILE_TYPES = {\n  IMAGE: \"image\",\n  VIDEO: \"video\",\n  AUDIO: \"audio\",\n  DOCUMENT: \"document\",\n} as const;\n\n// Content types\nexport const CONTENT_TYPES = {\n  IMAGE_PNG: \"image/png\",\n  IMAGE_JPEG: \"image/jpeg\",\n  IMAGE_WEBP: \"image/webp\",\n  VIDEO_MP4: \"video/mp4\",\n} as const;\n\n// Status codes\nexport const STATUS = {\n  SUCCESS: \"success\",\n  ERROR: \"error\",\n  PENDING: \"pending\",\n  FAILED: \"failed\",\n} as const;\n","// Application configuration constants\n\n// Next.js API routes\nexport const API_NEXT_ROUTES = {\n  GENERATE_IMAGE: '/api/generate/image',\n  GENERATE_VIDEO: '/api/generate/video',\n  FILE: (id: string) => `/api/file/${id}`,\n  FILE_UPLOAD: '/api/file/upload',\n  PROJECT: (id: string) => `/api/project/${id}`,\n  PROJECT_VIDEO: '/api/project/video',\n  ENHANCE_PROMPT: '/api/enhance-prompt',\n  MODELS: '/api/config/models',\n  SUPERDUPERAI: '/api/config/superduperai',\n  EVENTS_FILE: (fileId: string) => `/api/events/file.${fileId}`,\n  GENERATE_SCRIPT: '/api/generate/script',\n} as const;\n\n// Tool configuration types\nexport interface ToolConfig {\n  id: string;\n  name: string;\n  description: string;\n  shortDescription?: string;\n  iconName: 'image' | 'video' | 'wand' | 'sparkles' | 'zap' | 'play' | 'languages' | 'gallery';\n  href: string;\n  category: 'generation' | 'enhancement' | 'utility' | 'gallery';\n  features: {\n    iconName: 'sparkles' | 'zap' | 'play' | 'languages';\n    label: string;\n  }[];\n  primaryColor: string;\n  hoverColor: string;\n  bgColor: string;\n  hoverBgColor: string;\n}\n\n// Tools configuration\nexport const TOOLS_CONFIG: ToolConfig[] = [\n  {\n    id: 'image-generator',\n    name: 'Image Generator',\n    description: 'Generate high-quality images using AI models like FLUX Pro, FLUX Dev, and more from SuperDuperAI',\n    shortDescription: 'AI Image Generator',\n    iconName: 'image',\n    href: '/tools/image-generator',\n    category: 'generation',\n    features: [\n      { iconName: 'sparkles', label: 'Professional Quality' },\n      { iconName: 'zap', label: 'Real-time Progress' }\n    ],\n    primaryColor: 'blue-600',\n    hoverColor: 'blue-600',\n    bgColor: 'blue-100',\n    hoverBgColor: 'blue-200'\n  },\n  {\n    id: 'video-generator',\n    name: 'Video Generator',\n    description: 'Generate high-quality videos using AI models like VEO3, KLING, LTX, and more from SuperDuperAI',\n    shortDescription: 'AI Video Generator',\n    iconName: 'video',\n    href: '/tools/video-generator',\n    category: 'generation',\n    features: [\n      { iconName: 'play', label: 'Professional Quality' },\n      { iconName: 'zap', label: 'Real-time Progress' }\n    ],\n    primaryColor: 'purple-600',\n    hoverColor: 'purple-600',\n    bgColor: 'purple-100',\n    hoverBgColor: 'purple-200'\n  },\n  {\n    id: 'prompt-enhancer',\n    name: 'Prompt Enhancer',\n    description: 'Transform simple prompts into detailed, professional descriptions for better AI generation results',\n    shortDescription: 'AI Prompt Enhancer',\n    iconName: 'wand',\n    href: '/tools/prompt-enhancer',\n    category: 'enhancement',\n    features: [\n      { iconName: 'languages', label: 'Auto Translation' },\n      { iconName: 'sparkles', label: 'Smart Enhancement' }\n    ],\n    primaryColor: 'pink-600',\n    hoverColor: 'pink-600',\n    bgColor: 'pink-100',\n    hoverBgColor: 'pink-200'\n  },\n  {\n    id: 'prompt-enhancer-veo3',\n    name: 'Prompt Enhancer Veo3',\n    description: 'Transform simple prompts into detailed, professional descriptions for better AI generation results',\n    shortDescription: 'AI Prompt Enhancer VEO3',\n    iconName: 'wand',\n    href: '/tools/prompt-enhancer-veo3',\n    category: 'enhancement',\n    features: [\n      { iconName: 'languages', label: 'Auto Translation' },\n      { iconName: 'sparkles', label: 'Smart Enhancement' }\n    ],\n    primaryColor: 'pink-600',\n    hoverColor: 'pink-600',\n    bgColor: 'pink-100',\n    hoverBgColor: 'pink-200'\n  },\n  {\n    id: 'script-generator',\n    name: 'Script Generator',\n    description: 'Generate detailed scripts and scenarios in Markdown format using AI. Edit and refine your script with a powerful Markdown editor.',\n    shortDescription: 'AI Script Generator',\n    iconName: 'wand',\n    href: '/tools/script-generator',\n    category: 'generation',\n    features: [\n      { iconName: 'sparkles', label: 'Markdown Output' },\n      { iconName: 'sparkles', label: 'Script Structuring' }\n    ],\n    primaryColor: 'green-600',\n    hoverColor: 'green-600',\n    bgColor: 'green-100',\n    hoverBgColor: 'green-200'\n  }\n];\n\n// Tool categories\nexport const TOOL_CATEGORIES = {\n  GENERATION: 'generation',\n  ENHANCEMENT: 'enhancement',\n  UTILITY: 'utility',\n  GALLERY: 'gallery',\n} as const;\n\n// Tool icon names\nexport const TOOL_ICONS = {\n  IMAGE: 'image',\n  VIDEO: 'video',\n  WAND: 'wand',\n  SPARKLES: 'sparkles',\n  ZAP: 'zap',\n  PLAY: 'play',\n  LANGUAGES: 'languages',\n  GALLERY: 'gallery',\n} as const;\n","// Video generation constants\n\nexport interface MediaResolution {\n  width: number;\n  height: number;\n  label: string;\n  aspectRatio: string;\n  qualityType: string;\n}\n\nexport interface MediaOption {\n  id: string;\n  label: string;\n  description: string;\n}\n\n/**\n * Shared video generation constants\n * Centralized constants to eliminate duplication across video components\n */\n\nexport const VIDEO_RESOLUTIONS: MediaResolution[] = [\n  // SORA-COMPATIBLE RESOLUTIONS (16:9, 1:1, 9:16 only)\n  {\n    width: 1344,\n    height: 768,\n    label: \"1344x768\",\n    aspectRatio: \"16:9\",\n    qualityType: \"hd\",\n  },\n  {\n    width: 1024,\n    height: 1024,\n    label: \"1024x1024\",\n    aspectRatio: \"1:1\",\n    qualityType: \"hd\",\n  },\n  {\n    width: 768,\n    height: 1344,\n    label: \"768x1344\",\n    aspectRatio: \"9:16\",\n    qualityType: \"hd\",\n  },\n  // Premium Sora-compatible options\n  {\n    width: 1920,\n    height: 1080,\n    label: \"1920×1080\",\n    aspectRatio: \"16:9\",\n    qualityType: \"full_hd\",\n  },\n  {\n    width: 1408,\n    height: 1408,\n    label: \"1408×1408\",\n    aspectRatio: \"1:1\",\n    qualityType: \"full_hd\",\n  },\n  {\n    width: 1080,\n    height: 1920,\n    label: \"1080×1920\",\n    aspectRatio: \"9:16\",\n    qualityType: \"full_hd\",\n  },\n  // NON-SORA COMPATIBLE (4:3, 4:5) - for other models only\n  {\n    width: 1152,\n    height: 896,\n    label: \"1152x896 (Non-Sora)\",\n    aspectRatio: \"4:3\",\n    qualityType: \"hd\",\n  },\n  {\n    width: 1024,\n    height: 1280,\n    label: \"1024x1280 (Non-Sora)\",\n    aspectRatio: \"4:5\",\n    qualityType: \"hd\",\n  },\n  {\n    width: 1664,\n    height: 1216,\n    label: \"1664x1216 (Non-Sora)\",\n    aspectRatio: \"4:3\",\n    qualityType: \"full_hd\",\n  },\n  {\n    width: 1408,\n    height: 1760,\n    label: \"1408×1760 (Non-Sora)\",\n    aspectRatio: \"4:5\",\n    qualityType: \"full_hd\",\n  },\n];\n\nexport const SHOT_SIZES: MediaOption[] = [\n  {\n    id: \"extreme_long_shot\",\n    label: \"Extreme Long Shot\",\n    description: \"Shows vast landscapes or cityscapes with tiny subjects\",\n  },\n  {\n    id: \"long_shot\",\n    label: \"Long Shot\",\n    description: \"Shows full body of subject with surrounding environment\",\n  },\n  {\n    id: \"medium_shot\",\n    label: \"Medium Shot\",\n    description: \"Shows subject from waist up, good for conversations\",\n  },\n  {\n    id: \"close_up\",\n    label: \"Close Up\",\n    description: \"Shows subject's face or specific detail\",\n  },\n  {\n    id: \"extreme_close_up\",\n    label: \"Extreme Close Up\",\n    description: \"Shows very specific detail or emotion\",\n  },\n  {\n    id: \"two_shot\",\n    label: \"Two Shot\",\n    description: \"Shows two subjects in frame\",\n  },\n  {\n    id: \"over_the_shoulder\",\n    label: \"Over the Shoulder\",\n    description: \"Shows one subject from behind another's shoulder\",\n  },\n  {\n    id: \"point_of_view\",\n    label: \"Point of View\",\n    description: \"Shows scene from character's perspective\",\n  },\n];\n\nexport const VIDEO_STYLES: MediaOption[] = [\n  {\n    id: \"realistic\",\n    label: \"Realistic\",\n    description: \"Photorealistic, natural appearance\",\n  },\n  {\n    id: \"cinematic\",\n    label: \"Cinematic\",\n    description: \"Movie-like quality with dramatic lighting\",\n  },\n  {\n    id: \"anime\",\n    label: \"Anime\",\n    description: \"Japanese animation style\",\n  },\n  {\n    id: \"cartoon\",\n    label: \"Cartoon\",\n    description: \"Simple, colorful cartoon style\",\n  },\n  {\n    id: \"sketch\",\n    label: \"Sketch\",\n    description: \"Hand-drawn sketch appearance\",\n  },\n  {\n    id: \"painting\",\n    label: \"Painting\",\n    description: \"Artistic painting style\",\n  },\n  {\n    id: \"steampunk\",\n    label: \"Steampunk\",\n    description: \"Victorian sci-fi aesthetic\",\n  },\n  {\n    id: \"fantasy\",\n    label: \"Fantasy\",\n    description: \"Magical, otherworldly appearance\",\n  },\n  {\n    id: \"sci_fi\",\n    label: \"Sci-Fi\",\n    description: \"Futuristic, technological aesthetic\",\n  },\n  {\n    id: \"horror\",\n    label: \"Horror\",\n    description: \"Dark, frightening atmosphere\",\n  },\n  {\n    id: \"minimalist\",\n    label: \"Minimalist\",\n    description: \"Simple, clean design\",\n  },\n  {\n    id: \"abstract\",\n    label: \"Abstract\",\n    description: \"Non-representational, artistic\",\n  },\n];\n\nexport const VIDEO_DURATIONS = [5, 10, 15, 20, 30, 45, 60] as const;\nexport const VIDEO_FPS = [24, 30, 60] as const;\n\nexport const DEFAULT_VIDEO_CONFIG = {\n  resolution: VIDEO_RESOLUTIONS[0], // 1344x768\n  shotSize: SHOT_SIZES[2], // medium_shot\n  style: VIDEO_STYLES[0], // realistic\n  duration: VIDEO_DURATIONS[0], // 5 seconds\n  fps: VIDEO_FPS[0], // 24 fps\n} as const;\n","// Video model constants and utilities\n\nexport interface VideoModel {\n  name: string;\n  label: string;\n  type: string;\n  source: string;\n  params?: {\n    price_per_second?: number;\n    max_duration?: number;\n    max_resolution?: { width: number; height: number };\n    supported_frame_rates?: number[];\n    workflow_path?: string;\n    supported_aspect_ratios?: string[];\n    supported_qualities?: string[];\n  };\n}\n\nexport interface EnhancedVideoModel extends VideoModel {\n  id?: string;\n  description?: string;\n  maxDuration?: number;\n  maxResolution?: { width: number; height: number };\n  supportedFrameRates?: number[];\n  pricePerSecond?: number;\n  workflowPath?: string;\n  supportedAspectRatios?: string[];\n  supportedQualities?: string[];\n  category: \"text_to_video\" | \"image_to_video\" | \"video_to_video\";\n  uiLabel: string;\n  uiDescription: string;\n  recommendedSettings: any;\n  bestFor: string[];\n  priceTier: \"budget\" | \"standard\" | \"premium\" | \"luxury\";\n  requiresSourceImage: boolean;\n  requiresSourceVideo: boolean;\n}\n\nexport interface VideoModelMetadata {\n  category: \"text_to_video\" | \"image_to_video\" | \"video_to_video\";\n  ui_label: string;\n  ui_description: string;\n  recommended_settings: any;\n  best_for: string[];\n}\n\nexport interface VideoModelsConfig {\n  model_metadata: Record<string, VideoModelMetadata>;\n}\n\n// Default video models configuration\nexport const DEFAULT_VIDEO_MODELS: VideoModel[] = [\n  {\n    name: \"comfyui/ltx\",\n    label: \"LTX Video\",\n    type: \"text_to_video\",\n    source: \"superduperai\",\n    params: {\n      price_per_second: 0.4,\n      max_duration: 60,\n      max_resolution: { width: 1920, height: 1080 },\n      supported_frame_rates: [24, 30],\n      workflow_path: \"/workflows/ltx.json\",\n      supported_aspect_ratios: [\"16:9\", \"1:1\", \"9:16\"],\n      supported_qualities: [\"standard\", \"high\"]\n    }\n  },\n  {\n    name: \"comfyui/veo3\",\n    label: \"VEO3 Video\",\n    type: \"image_to_video\",\n    source: \"superduperai\",\n    params: {\n      price_per_second: 1.2,\n      max_duration: 30,\n      max_resolution: { width: 1920, height: 1080 },\n      supported_frame_rates: [24, 30, 60],\n      workflow_path: \"/workflows/veo3.json\",\n      supported_aspect_ratios: [\"16:9\", \"1:1\", \"9:16\"],\n      supported_qualities: [\"standard\", \"high\", \"ultra\"]\n    }\n  },\n  {\n    name: \"comfyui/kling\",\n    label: \"KLING Video\",\n    type: \"image_to_video\",\n    source: \"superduperai\",\n    params: {\n      price_per_second: 0.8,\n      max_duration: 45,\n      max_resolution: { width: 1920, height: 1080 },\n      supported_frame_rates: [24, 30],\n      workflow_path: \"/workflows/kling.json\",\n      supported_aspect_ratios: [\"16:9\", \"1:1\", \"9:16\"],\n      supported_qualities: [\"standard\", \"high\"]\n    }\n  }\n];\n\n// Price tier thresholds\nexport const PRICE_TIER_THRESHOLDS = {\n  BUDGET: 0.5,\n  STANDARD: 1.5,\n  PREMIUM: 2.5,\n  LUXURY: Infinity\n} as const;\n\n// Video model categories\nexport const VIDEO_MODEL_CATEGORIES = {\n  TEXT_TO_VIDEO: \"text_to_video\",\n  IMAGE_TO_VIDEO: \"image_to_video\",\n  VIDEO_TO_VIDEO: \"video_to_video\"\n} as const;\n\n// Price tiers\nexport const PRICE_TIERS = {\n  BUDGET: \"budget\",\n  STANDARD: \"standard\",\n  PREMIUM: \"premium\",\n  LUXURY: \"luxury\"\n} as const;\n\n/**\n * Determine price tier based on price per second\n */\nexport function getPriceTier(pricePerSecond: number): keyof typeof PRICE_TIERS {\n  if (pricePerSecond <= PRICE_TIER_THRESHOLDS.BUDGET) return \"BUDGET\";\n  if (pricePerSecond <= PRICE_TIER_THRESHOLDS.STANDARD) return \"STANDARD\";\n  if (pricePerSecond <= PRICE_TIER_THRESHOLDS.PREMIUM) return \"PREMIUM\";\n  return \"LUXURY\";\n}\n\n/**\n * Determine category from model name\n */\nexport function getModelCategory(modelName: string): keyof typeof VIDEO_MODEL_CATEGORIES {\n  const name = modelName.toLowerCase();\n  \n  if (name.includes(\"image-to-video\") || name.includes(\"veo\") || name.includes(\"kling\")) {\n    return \"IMAGE_TO_VIDEO\";\n  } else if (name.includes(\"lip-sync\") || name.includes(\"video-to-video\")) {\n    return \"VIDEO_TO_VIDEO\";\n  }\n  \n  return \"TEXT_TO_VIDEO\";\n}\n\n/**\n * Get default video model by category\n */\nexport function getDefaultVideoModelByCategory(category: keyof typeof VIDEO_MODEL_CATEGORIES): VideoModel | undefined {\n  return DEFAULT_VIDEO_MODELS.find(model => \n    getModelCategory(model.name) === category\n  );\n}\n\n/**\n * Get video models by price tier\n */\nexport function getVideoModelsByPriceTier(models: VideoModel[], tier: keyof typeof PRICE_TIERS): VideoModel[] {\n  return models.filter(model => {\n    const price = model.params?.price_per_second || 0;\n    return getPriceTier(price) === tier;\n  });\n}\n\n/**\n * Get video models by category\n */\nexport function getVideoModelsByCategory(models: VideoModel[], category: keyof typeof VIDEO_MODEL_CATEGORIES): VideoModel[] {\n  return models.filter(model => getModelCategory(model.name) === category);\n}\n","// Media settings factory constants and types\n\nexport interface MediaSettingsOption {\n  id: string;\n  label: string;\n  description: string;\n  value: string;\n  category?: string;\n  tags?: string[];\n}\n\nexport interface ImageGenerationConfig {\n  availableModels: MediaSettingsOption[];\n  availableResolutions: MediaSettingsOption[];\n  availableStyles: MediaSettingsOption[];\n  availableShotSizes: MediaSettingsOption[];\n  supportedFormats: string[];\n  maxBatchSize: number;\n  qualityOptions: MediaSettingsOption[];\n  defaultSettings: {\n    model: string;\n    resolution: string;\n    style: string;\n    shotSize: string;\n  };\n}\n\nexport interface VideoGenerationConfig {\n  availableModels: MediaSettingsOption[];\n  availableResolutions: MediaSettingsOption[];\n  availableStyles: MediaSettingsOption[];\n  availableShotSizes: MediaSettingsOption[];\n  supportedDurations: number[];\n  supportedFps: number[];\n  maxDuration: number;\n  qualityPresets: MediaSettingsOption[];\n  defaultSettings: {\n    model: string;\n    resolution: string;\n    style: string;\n    shotSize: string;\n    duration: number;\n    fps: number;\n  };\n}\n\nexport interface IGenerationConfigRead {\n  name: string;\n  type: string;\n  source: string;\n  params?: {\n    workflow_path?: string;\n    price?: number;\n    max_duration?: number;\n    max_resolution?: { width: number; height: number };\n    supported_frame_rates?: number[];\n    supported_aspect_ratios?: string[];\n    supported_qualities?: string[];\n  };\n}\n\n// Shot size enum\nexport enum ShotSizeEnum {\n  EXTREME_LONG_SHOT = \"extreme_long_shot\",\n  LONG_SHOT = \"long_shot\",\n  MEDIUM_SHOT = \"medium_shot\",\n  CLOSE_UP = \"close_up\",\n  EXTREME_CLOSE_UP = \"extreme_close_up\",\n  TWO_SHOT = \"two_shot\",\n  OVER_THE_SHOULDER = \"over_the_shoulder\",\n  POINT_OF_VIEW = \"point_of_view\"\n}\n\n// Default image generation configuration\nexport const DEFAULT_IMAGE_CONFIG: ImageGenerationConfig = {\n  availableModels: [\n    { id: \"comfyui/flux\", label: \"FLUX Pro\", description: \"High-quality image generation\", value: \"comfyui/flux\", category: \"pro\" },\n    { id: \"comfyui/flux-dev\", label: \"FLUX Dev\", description: \"Development version\", value: \"comfyui/flux-dev\", category: \"dev\" },\n    { id: \"comfyui/sdxl\", label: \"SDXL\", description: \"Stable Diffusion XL\", value: \"comfyui/sdxl\", category: \"standard\" }\n  ],\n  availableResolutions: [\n    { id: \"1024x1024\", label: \"1024x1024\", description: \"Square HD\", value: \"1024x1024\" },\n    { id: \"1920x1080\", label: \"1920x1080\", description: \"Full HD\", value: \"1920x1080\" },\n    { id: \"1080x1920\", label: \"1080x1920\", description: \"Portrait HD\", value: \"1080x1920\" }\n  ],\n  availableStyles: [\n    { id: \"realistic\", label: \"Realistic\", description: \"Photorealistic style\", value: \"realistic\" },\n    { id: \"cinematic\", label: \"Cinematic\", description: \"Movie-like style\", value: \"cinematic\" },\n    { id: \"anime\", label: \"Anime\", description: \"Japanese animation style\", value: \"anime\" }\n  ],\n  availableShotSizes: [\n    { id: \"close-up\", label: \"Close-up\", description: \"Tight framing\", value: \"close-up\" },\n    { id: \"medium-shot\", label: \"Medium Shot\", description: \"Balanced framing\", value: \"medium-shot\" },\n    { id: \"long-shot\", label: \"Long Shot\", description: \"Wide framing\", value: \"long-shot\" }\n  ],\n  supportedFormats: [\"PNG\", \"JPEG\", \"WEBP\"],\n  maxBatchSize: 3,\n  qualityOptions: [\n    { id: \"standard\", label: \"Standard\", description: \"Good quality, fast generation\", value: \"standard\" },\n    { id: \"high\", label: \"High\", description: \"Better quality, slower generation\", value: \"high\" }\n  ],\n  defaultSettings: {\n    model: \"comfyui/flux\",\n    resolution: \"1024x1024\",\n    style: \"realistic\",\n    shotSize: \"medium-shot\"\n  }\n};\n\n// Default video generation configuration\nexport const DEFAULT_VIDEO_GENERATION_CONFIG: VideoGenerationConfig = {\n  availableModels: [\n    { id: \"comfyui/ltx\", label: \"LTX Video\", description: \"Text to video generation\", value: \"comfyui/ltx\", category: \"text_to_video\" },\n    { id: \"comfyui/veo3\", label: \"VEO3 Video\", description: \"Image to video generation\", value: \"comfyui/veo3\", category: \"image_to_video\" },\n    { id: \"comfyui/kling\", label: \"KLING Video\", description: \"Advanced video generation\", value: \"comfyui/kling\", category: \"image_to_video\" }\n  ],\n  availableResolutions: [\n    { id: \"1344x768\", label: \"1344x768\", description: \"HD Widescreen\", value: \"1344x768\" },\n    { id: \"1024x1024\", label: \"1024x1024\", description: \"Square HD\", value: \"1024x1024\" },\n    { id: \"768x1344\", label: \"768x1344\", description: \"Portrait HD\", value: \"768x1344\" }\n  ],\n  availableStyles: [\n    { id: \"realistic\", label: \"Realistic\", description: \"Photorealistic style\", value: \"realistic\" },\n    { id: \"cinematic\", label: \"Cinematic\", description: \"Movie-like style\", value: \"cinematic\" },\n    { id: \"anime\", label: \"Anime\", description: \"Japanese animation style\", value: \"anime\" }\n  ],\n  availableShotSizes: [\n    { id: \"close-up\", label: \"Close-up\", description: \"Tight framing\", value: \"close-up\" },\n    { id: \"medium-shot\", label: \"Medium Shot\", description: \"Balanced framing\", value: \"medium-shot\" },\n    { id: \"long-shot\", label: \"Long Shot\", description: \"Wide framing\", value: \"long-shot\" }\n  ],\n  supportedDurations: [5, 10, 15, 20, 30, 45, 60],\n  supportedFps: [24, 30, 60],\n  maxDuration: 60,\n  qualityPresets: [\n    { id: \"standard\", label: \"Standard\", description: \"Good quality, fast generation\", value: \"standard\" },\n    { id: \"high\", label: \"High\", description: \"Better quality, slower generation\", value: \"high\" }\n  ],\n  defaultSettings: {\n    model: \"comfyui/ltx\",\n    resolution: \"1344x768\",\n    style: \"realistic\",\n    shotSize: \"medium-shot\",\n    duration: 5,\n    fps: 24\n  }\n};\n\n// Cache configuration\nexport const CACHE_CONFIG = {\n  DURATION: 60 * 60 * 1000, // 1 hour\n  IMAGE_CONFIG_KEY: \"image_config_cache\",\n  VIDEO_CONFIG_KEY: \"video_config_cache\"\n} as const;\n\n// Priority fallback models\nexport const PRIORITY_MODELS = {\n  IMAGE: [\"comfyui/flux\", \"comfyui/sdxl\", \"flux-dev\", \"sdxl\"],\n  VIDEO: [\"comfyui/ltx\", \"comfyui/veo3\", \"comfyui/kling\"]\n} as const;\n\n/**\n * Adapter function to convert OpenAPI model to MediaSettings format\n */\nexport function adaptModelForMediaSettings(\n  model: IGenerationConfigRead\n): IGenerationConfigRead & {\n  id: string;\n  label: string;\n  description: string;\n  value: string;\n  workflowPath: string;\n  price: number;\n} {\n  return {\n    ...model,\n    id: model.name, // Use name as id for compatibility\n    label: model.name, // Use name as label for display\n    description: `${model.type} - ${model.source}`,\n    value: model.name,\n    workflowPath: model.params?.workflow_path || \"\",\n    price: model.params?.price || 0,\n  };\n}\n\n/**\n * Get default model by priority\n */\nexport function getDefaultModelByPriority(\n  models: IGenerationConfigRead[],\n  priorityList: string[]\n): IGenerationConfigRead | undefined {\n  for (const modelName of priorityList) {\n    const model = models.find((m) => m.name === modelName);\n    if (model) return model;\n  }\n  return undefined;\n}\n\n/**\n * Validate media settings configuration\n */\nexport function validateMediaSettingsConfig(config: ImageGenerationConfig | VideoGenerationConfig): boolean {\n  return !!(\n    config.availableModels?.length > 0 &&\n    config.availableResolutions?.length > 0 &&\n    config.availableStyles?.length > 0 &&\n    config.availableShotSizes?.length > 0\n  );\n}\n","// Validation utilities\n\nimport { z } from 'zod';\n\nexport const emailSchema = z.string().email();\nexport const urlSchema = z.string().url();\n\nexport function isValidEmail(email: string): boolean {\n  try {\n    emailSchema.parse(email);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    urlSchema.parse(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function validateFileSize(size: number, maxSize: number): boolean {\n  return size <= maxSize;\n}\n\nexport function validateFileType(type: string, allowedTypes: string[]): boolean {\n  return allowedTypes.includes(type);\n}\n\n\n","// Formatting utilities\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nexport function formatDate(date: Date): string {\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n}\n\nexport function formatDateTime(date: Date): string {\n  return date.toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n}\n\n\n","// File utilities\n\nexport function getFileExtension(filename: string): string {\n  return filename.split('.').pop()?.toLowerCase() || '';\n}\n\nexport function getFileNameWithoutExtension(filename: string): string {\n  return filename.replace(/\\.[^/.]+$/, '');\n}\n\nexport function isImageFile(filename: string): boolean {\n  const ext = getFileExtension(filename);\n  return ['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(ext);\n}\n\nexport function isVideoFile(filename: string): boolean {\n  const ext = getFileExtension(filename);\n  return ['mp4', 'mov', 'avi', 'mkv', 'webm'].includes(ext);\n}\n\n\n"],"mappings":"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","names":["ShotSizeEnum"]}