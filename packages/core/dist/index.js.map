{"version":3,"sources":["../src/index.ts","../src/constants/app.ts","../src/constants/api.ts","../src/constants/common.ts","../src/constants/config.ts","../src/constants/video.ts","../src/constants/video-models.ts","../src/constants/media-settings.ts","../src/utils/validation.ts","../src/utils/formatting.ts","../src/utils/files.ts"],"sourcesContent":["// Core package exports\r\n// This package contains shared constants, types, and utilities\r\n\r\nexport * from './constants';\r\nexport * from './types';\r\nexport * from './utils';\r\nexport * from './validation';\r\n\r\n","// Application specific constants\r\n\r\nexport const APP_CONFIG = {\r\n  MAX_FILE_SIZE: 100 * 1024 * 1024, // 100MB\r\n  MAX_IMAGE_SIZE: 10 * 1024 * 1024, // 10MB\r\n  MAX_VIDEO_SIZE: 500 * 1024 * 1024, // 500MB\r\n  SUPPORTED_IMAGE_FORMATS: ['png', 'jpg', 'jpeg', 'webp'],\r\n  SUPPORTED_VIDEO_FORMATS: ['mp4', 'mov', 'avi'],\r\n} as const;\r\n\r\nexport const UI_CONFIG = {\r\n  ANIMATION_DURATION: 300, // ms\r\n  DEBOUNCE_DELAY: 300, // ms\r\n  TOAST_DURATION: 5000, // ms\r\n  PAGINATION_DEFAULT_SIZE: 20,\r\n} as const;\r\n\r\nexport const FEATURE_FLAGS = {\r\n  ENABLE_VIDEO_GENERATION: true,\r\n  ENABLE_IMAGE_EDITING: true,\r\n  ENABLE_AI_CHAT: true,\r\n  ENABLE_PAYMENTS: true,\r\n} as const;\r\n\r\n","// API related constants\r\n\r\nexport const API_CONFIG = {\r\n  TIMEOUT: 30000, // 30 seconds\r\n  RETRY_ATTEMPTS: 3,\r\n  RETRY_DELAY: 1000, // 1 second\r\n} as const;\r\n\r\nexport const HTTP_STATUS = {\r\n  OK: 200,\r\n  CREATED: 201,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  INTERNAL_SERVER_ERROR: 500,\r\n  GATEWAY_TIMEOUT: 504,\r\n} as const;\r\n\r\nexport const API_HEADERS = {\r\n  CONTENT_TYPE: 'Content-Type',\r\n  AUTHORIZATION: 'Authorization',\r\n  USER_AGENT: 'User-Agent',\r\n} as const;\r\n\r\nexport const API_METHODS = {\r\n  GET: 'GET',\r\n  POST: 'POST',\r\n  PUT: 'PUT',\r\n  DELETE: 'DELETE',\r\n  PATCH: 'PATCH',\r\n} as const;\r\n\r\n","// Common constants used across both super-chatbot and super-landing\r\n\r\nexport const APP_NAME = \"SuperDuperAI\";\r\nexport const APP_VERSION = \"3.0.0\";\r\n\r\n// Environment\r\nexport const ENV = {\r\n  DEVELOPMENT: \"development\",\r\n  PRODUCTION: \"production\",\r\n  TEST: \"test\",\r\n} as const;\r\n\r\n// API endpoints\r\nexport const API_ENDPOINTS = {\r\n  // Internal API endpoints\r\n  AUTH: \"/api/auth\",\r\n  UPLOAD: \"/api/files/upload\",\r\n  GENERATE: \"/api/generate\",\r\n  BALANCE: \"/api/user/balance\",\r\n\r\n  // External API base URLs\r\n  SUPERDUPERAI_BASE_URL:\r\n    process.env.SUPERDUPERAI_API_URL || \"https://api.superduperai.co\",\r\n  STRIPE_BASE_URL: process.env.STRIPE_API_URL || \"https://api.stripe.com\",\r\n  UPLOAD_BASE_URL: process.env.UPLOAD_API_URL || \"/api/files\",\r\n  WEBSOCKET_BASE_URL:\r\n    process.env.WEBSOCKET_API_URL || \"wss://ws.superduperai.co\",\r\n} as const;\r\n\r\n// File types\r\nexport const FILE_TYPES = {\r\n  IMAGE: \"image\",\r\n  VIDEO: \"video\",\r\n  AUDIO: \"audio\",\r\n  DOCUMENT: \"document\",\r\n} as const;\r\n\r\n// Content types\r\nexport const CONTENT_TYPES = {\r\n  IMAGE_PNG: \"image/png\",\r\n  IMAGE_JPEG: \"image/jpeg\",\r\n  IMAGE_WEBP: \"image/webp\",\r\n  VIDEO_MP4: \"video/mp4\",\r\n} as const;\r\n\r\n// Status codes\r\nexport const STATUS = {\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n  PENDING: \"pending\",\r\n  FAILED: \"failed\",\r\n} as const;\r\n","// Application configuration constants\r\n\r\n// Next.js API routes\r\nexport const API_NEXT_ROUTES = {\r\n  GENERATE_IMAGE: '/api/generate/image',\r\n  GENERATE_VIDEO: '/api/generate/video',\r\n  FILE: (id: string) => `/api/file/${id}`,\r\n  FILE_UPLOAD: '/api/file/upload',\r\n  PROJECT: (id: string) => `/api/project/${id}`,\r\n  PROJECT_VIDEO: '/api/project/video',\r\n  ENHANCE_PROMPT: '/api/enhance-prompt',\r\n  MODELS: '/api/config/models',\r\n  SUPERDUPERAI: '/api/config/superduperai',\r\n  EVENTS_FILE: (fileId: string) => `/api/events/file.${fileId}`,\r\n  GENERATE_SCRIPT: '/api/generate/script',\r\n} as const;\r\n\r\n// Tool configuration types\r\nexport interface ToolConfig {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  shortDescription?: string;\r\n  iconName: 'image' | 'video' | 'wand' | 'sparkles' | 'zap' | 'play' | 'languages' | 'gallery';\r\n  href: string;\r\n  category: 'generation' | 'enhancement' | 'utility' | 'gallery';\r\n  features: {\r\n    iconName: 'sparkles' | 'zap' | 'play' | 'languages';\r\n    label: string;\r\n  }[];\r\n  primaryColor: string;\r\n  hoverColor: string;\r\n  bgColor: string;\r\n  hoverBgColor: string;\r\n}\r\n\r\n// Tools configuration\r\nexport const TOOLS_CONFIG: ToolConfig[] = [\r\n  {\r\n    id: 'image-generator',\r\n    name: 'Image Generator',\r\n    description: 'Generate high-quality images using AI models like FLUX Pro, FLUX Dev, and more from SuperDuperAI',\r\n    shortDescription: 'AI Image Generator',\r\n    iconName: 'image',\r\n    href: '/tools/image-generator',\r\n    category: 'generation',\r\n    features: [\r\n      { iconName: 'sparkles', label: 'Professional Quality' },\r\n      { iconName: 'zap', label: 'Real-time Progress' }\r\n    ],\r\n    primaryColor: 'blue-600',\r\n    hoverColor: 'blue-600',\r\n    bgColor: 'blue-100',\r\n    hoverBgColor: 'blue-200'\r\n  },\r\n  {\r\n    id: 'video-generator',\r\n    name: 'Video Generator',\r\n    description: 'Generate high-quality videos using AI models like VEO3, KLING, LTX, and more from SuperDuperAI',\r\n    shortDescription: 'AI Video Generator',\r\n    iconName: 'video',\r\n    href: '/tools/video-generator',\r\n    category: 'generation',\r\n    features: [\r\n      { iconName: 'play', label: 'Professional Quality' },\r\n      { iconName: 'zap', label: 'Real-time Progress' }\r\n    ],\r\n    primaryColor: 'purple-600',\r\n    hoverColor: 'purple-600',\r\n    bgColor: 'purple-100',\r\n    hoverBgColor: 'purple-200'\r\n  },\r\n  {\r\n    id: 'prompt-enhancer',\r\n    name: 'Prompt Enhancer',\r\n    description: 'Transform simple prompts into detailed, professional descriptions for better AI generation results',\r\n    shortDescription: 'AI Prompt Enhancer',\r\n    iconName: 'wand',\r\n    href: '/tools/prompt-enhancer',\r\n    category: 'enhancement',\r\n    features: [\r\n      { iconName: 'languages', label: 'Auto Translation' },\r\n      { iconName: 'sparkles', label: 'Smart Enhancement' }\r\n    ],\r\n    primaryColor: 'pink-600',\r\n    hoverColor: 'pink-600',\r\n    bgColor: 'pink-100',\r\n    hoverBgColor: 'pink-200'\r\n  },\r\n  {\r\n    id: 'prompt-enhancer-veo3',\r\n    name: 'Prompt Enhancer Veo3',\r\n    description: 'Transform simple prompts into detailed, professional descriptions for better AI generation results',\r\n    shortDescription: 'AI Prompt Enhancer VEO3',\r\n    iconName: 'wand',\r\n    href: '/tools/prompt-enhancer-veo3',\r\n    category: 'enhancement',\r\n    features: [\r\n      { iconName: 'languages', label: 'Auto Translation' },\r\n      { iconName: 'sparkles', label: 'Smart Enhancement' }\r\n    ],\r\n    primaryColor: 'pink-600',\r\n    hoverColor: 'pink-600',\r\n    bgColor: 'pink-100',\r\n    hoverBgColor: 'pink-200'\r\n  },\r\n  {\r\n    id: 'script-generator',\r\n    name: 'Script Generator',\r\n    description: 'Generate detailed scripts and scenarios in Markdown format using AI. Edit and refine your script with a powerful Markdown editor.',\r\n    shortDescription: 'AI Script Generator',\r\n    iconName: 'wand',\r\n    href: '/tools/script-generator',\r\n    category: 'generation',\r\n    features: [\r\n      { iconName: 'sparkles', label: 'Markdown Output' },\r\n      { iconName: 'sparkles', label: 'Script Structuring' }\r\n    ],\r\n    primaryColor: 'green-600',\r\n    hoverColor: 'green-600',\r\n    bgColor: 'green-100',\r\n    hoverBgColor: 'green-200'\r\n  }\r\n];\r\n\r\n// Tool categories\r\nexport const TOOL_CATEGORIES = {\r\n  GENERATION: 'generation',\r\n  ENHANCEMENT: 'enhancement',\r\n  UTILITY: 'utility',\r\n  GALLERY: 'gallery',\r\n} as const;\r\n\r\n// Tool icon names\r\nexport const TOOL_ICONS = {\r\n  IMAGE: 'image',\r\n  VIDEO: 'video',\r\n  WAND: 'wand',\r\n  SPARKLES: 'sparkles',\r\n  ZAP: 'zap',\r\n  PLAY: 'play',\r\n  LANGUAGES: 'languages',\r\n  GALLERY: 'gallery',\r\n} as const;\r\n","// Video generation constants\r\n\r\nexport interface MediaResolution {\r\n  width: number;\r\n  height: number;\r\n  label: string;\r\n  aspectRatio: string;\r\n  qualityType: string;\r\n}\r\n\r\nexport interface MediaOption {\r\n  id: string;\r\n  label: string;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Shared video generation constants\r\n * Centralized constants to eliminate duplication across video components\r\n */\r\n\r\nexport const VIDEO_RESOLUTIONS: MediaResolution[] = [\r\n  // SORA-COMPATIBLE RESOLUTIONS (16:9, 1:1, 9:16 only)\r\n  {\r\n    width: 1344,\r\n    height: 768,\r\n    label: \"1344x768\",\r\n    aspectRatio: \"16:9\",\r\n    qualityType: \"hd\",\r\n  },\r\n  {\r\n    width: 1024,\r\n    height: 1024,\r\n    label: \"1024x1024\",\r\n    aspectRatio: \"1:1\",\r\n    qualityType: \"hd\",\r\n  },\r\n  {\r\n    width: 768,\r\n    height: 1344,\r\n    label: \"768x1344\",\r\n    aspectRatio: \"9:16\",\r\n    qualityType: \"hd\",\r\n  },\r\n  // Premium Sora-compatible options\r\n  {\r\n    width: 1920,\r\n    height: 1080,\r\n    label: \"1920×1080\",\r\n    aspectRatio: \"16:9\",\r\n    qualityType: \"full_hd\",\r\n  },\r\n  {\r\n    width: 1408,\r\n    height: 1408,\r\n    label: \"1408×1408\",\r\n    aspectRatio: \"1:1\",\r\n    qualityType: \"full_hd\",\r\n  },\r\n  {\r\n    width: 1080,\r\n    height: 1920,\r\n    label: \"1080×1920\",\r\n    aspectRatio: \"9:16\",\r\n    qualityType: \"full_hd\",\r\n  },\r\n  // NON-SORA COMPATIBLE (4:3, 4:5) - for other models only\r\n  {\r\n    width: 1152,\r\n    height: 896,\r\n    label: \"1152x896 (Non-Sora)\",\r\n    aspectRatio: \"4:3\",\r\n    qualityType: \"hd\",\r\n  },\r\n  {\r\n    width: 1024,\r\n    height: 1280,\r\n    label: \"1024x1280 (Non-Sora)\",\r\n    aspectRatio: \"4:5\",\r\n    qualityType: \"hd\",\r\n  },\r\n  {\r\n    width: 1664,\r\n    height: 1216,\r\n    label: \"1664x1216 (Non-Sora)\",\r\n    aspectRatio: \"4:3\",\r\n    qualityType: \"full_hd\",\r\n  },\r\n  {\r\n    width: 1408,\r\n    height: 1760,\r\n    label: \"1408×1760 (Non-Sora)\",\r\n    aspectRatio: \"4:5\",\r\n    qualityType: \"full_hd\",\r\n  },\r\n];\r\n\r\nexport const SHOT_SIZES: MediaOption[] = [\r\n  {\r\n    id: \"extreme_long_shot\",\r\n    label: \"Extreme Long Shot\",\r\n    description: \"Shows vast landscapes or cityscapes with tiny subjects\",\r\n  },\r\n  {\r\n    id: \"long_shot\",\r\n    label: \"Long Shot\",\r\n    description: \"Shows full body of subject with surrounding environment\",\r\n  },\r\n  {\r\n    id: \"medium_shot\",\r\n    label: \"Medium Shot\",\r\n    description: \"Shows subject from waist up, good for conversations\",\r\n  },\r\n  {\r\n    id: \"close_up\",\r\n    label: \"Close Up\",\r\n    description: \"Shows subject's face or specific detail\",\r\n  },\r\n  {\r\n    id: \"extreme_close_up\",\r\n    label: \"Extreme Close Up\",\r\n    description: \"Shows very specific detail or emotion\",\r\n  },\r\n  {\r\n    id: \"two_shot\",\r\n    label: \"Two Shot\",\r\n    description: \"Shows two subjects in frame\",\r\n  },\r\n  {\r\n    id: \"over_the_shoulder\",\r\n    label: \"Over the Shoulder\",\r\n    description: \"Shows one subject from behind another's shoulder\",\r\n  },\r\n  {\r\n    id: \"point_of_view\",\r\n    label: \"Point of View\",\r\n    description: \"Shows scene from character's perspective\",\r\n  },\r\n];\r\n\r\nexport const VIDEO_STYLES: MediaOption[] = [\r\n  {\r\n    id: \"realistic\",\r\n    label: \"Realistic\",\r\n    description: \"Photorealistic, natural appearance\",\r\n  },\r\n  {\r\n    id: \"cinematic\",\r\n    label: \"Cinematic\",\r\n    description: \"Movie-like quality with dramatic lighting\",\r\n  },\r\n  {\r\n    id: \"anime\",\r\n    label: \"Anime\",\r\n    description: \"Japanese animation style\",\r\n  },\r\n  {\r\n    id: \"cartoon\",\r\n    label: \"Cartoon\",\r\n    description: \"Simple, colorful cartoon style\",\r\n  },\r\n  {\r\n    id: \"sketch\",\r\n    label: \"Sketch\",\r\n    description: \"Hand-drawn sketch appearance\",\r\n  },\r\n  {\r\n    id: \"painting\",\r\n    label: \"Painting\",\r\n    description: \"Artistic painting style\",\r\n  },\r\n  {\r\n    id: \"steampunk\",\r\n    label: \"Steampunk\",\r\n    description: \"Victorian sci-fi aesthetic\",\r\n  },\r\n  {\r\n    id: \"fantasy\",\r\n    label: \"Fantasy\",\r\n    description: \"Magical, otherworldly appearance\",\r\n  },\r\n  {\r\n    id: \"sci_fi\",\r\n    label: \"Sci-Fi\",\r\n    description: \"Futuristic, technological aesthetic\",\r\n  },\r\n  {\r\n    id: \"horror\",\r\n    label: \"Horror\",\r\n    description: \"Dark, frightening atmosphere\",\r\n  },\r\n  {\r\n    id: \"minimalist\",\r\n    label: \"Minimalist\",\r\n    description: \"Simple, clean design\",\r\n  },\r\n  {\r\n    id: \"abstract\",\r\n    label: \"Abstract\",\r\n    description: \"Non-representational, artistic\",\r\n  },\r\n];\r\n\r\nexport const VIDEO_DURATIONS = [5, 10, 15, 20, 30, 45, 60] as const;\r\nexport const VIDEO_FPS = [24, 30, 60] as const;\r\n\r\nexport const DEFAULT_VIDEO_CONFIG = {\r\n  resolution: VIDEO_RESOLUTIONS[0], // 1344x768\r\n  shotSize: SHOT_SIZES[2], // medium_shot\r\n  style: VIDEO_STYLES[0], // realistic\r\n  duration: VIDEO_DURATIONS[0], // 5 seconds\r\n  fps: VIDEO_FPS[0], // 24 fps\r\n} as const;\r\n","// Video model constants and utilities\r\n\r\nexport interface VideoModel {\r\n  name: string;\r\n  label: string;\r\n  type: string;\r\n  source: string;\r\n  params?: {\r\n    price_per_second?: number;\r\n    max_duration?: number;\r\n    max_resolution?: { width: number; height: number };\r\n    supported_frame_rates?: number[];\r\n    workflow_path?: string;\r\n    supported_aspect_ratios?: string[];\r\n    supported_qualities?: string[];\r\n  };\r\n}\r\n\r\nexport interface EnhancedVideoModel extends VideoModel {\r\n  id?: string;\r\n  description?: string;\r\n  maxDuration?: number;\r\n  maxResolution?: { width: number; height: number };\r\n  supportedFrameRates?: number[];\r\n  pricePerSecond?: number;\r\n  workflowPath?: string;\r\n  supportedAspectRatios?: string[];\r\n  supportedQualities?: string[];\r\n  category: \"text_to_video\" | \"image_to_video\" | \"video_to_video\";\r\n  uiLabel: string;\r\n  uiDescription: string;\r\n  recommendedSettings: any;\r\n  bestFor: string[];\r\n  priceTier: \"budget\" | \"standard\" | \"premium\" | \"luxury\";\r\n  requiresSourceImage: boolean;\r\n  requiresSourceVideo: boolean;\r\n}\r\n\r\nexport interface VideoModelMetadata {\r\n  category: \"text_to_video\" | \"image_to_video\" | \"video_to_video\";\r\n  ui_label: string;\r\n  ui_description: string;\r\n  recommended_settings: any;\r\n  best_for: string[];\r\n}\r\n\r\nexport interface VideoModelsConfig {\r\n  model_metadata: Record<string, VideoModelMetadata>;\r\n}\r\n\r\n// Default video models configuration\r\nexport const DEFAULT_VIDEO_MODELS: VideoModel[] = [\r\n  {\r\n    name: \"comfyui/ltx\",\r\n    label: \"LTX Video\",\r\n    type: \"text_to_video\",\r\n    source: \"superduperai\",\r\n    params: {\r\n      price_per_second: 0.4,\r\n      max_duration: 60,\r\n      max_resolution: { width: 1920, height: 1080 },\r\n      supported_frame_rates: [24, 30],\r\n      workflow_path: \"/workflows/ltx.json\",\r\n      supported_aspect_ratios: [\"16:9\", \"1:1\", \"9:16\"],\r\n      supported_qualities: [\"standard\", \"high\"]\r\n    }\r\n  },\r\n  {\r\n    name: \"comfyui/veo3\",\r\n    label: \"VEO3 Video\",\r\n    type: \"image_to_video\",\r\n    source: \"superduperai\",\r\n    params: {\r\n      price_per_second: 1.2,\r\n      max_duration: 30,\r\n      max_resolution: { width: 1920, height: 1080 },\r\n      supported_frame_rates: [24, 30, 60],\r\n      workflow_path: \"/workflows/veo3.json\",\r\n      supported_aspect_ratios: [\"16:9\", \"1:1\", \"9:16\"],\r\n      supported_qualities: [\"standard\", \"high\", \"ultra\"]\r\n    }\r\n  },\r\n  {\r\n    name: \"comfyui/kling\",\r\n    label: \"KLING Video\",\r\n    type: \"image_to_video\",\r\n    source: \"superduperai\",\r\n    params: {\r\n      price_per_second: 0.8,\r\n      max_duration: 45,\r\n      max_resolution: { width: 1920, height: 1080 },\r\n      supported_frame_rates: [24, 30],\r\n      workflow_path: \"/workflows/kling.json\",\r\n      supported_aspect_ratios: [\"16:9\", \"1:1\", \"9:16\"],\r\n      supported_qualities: [\"standard\", \"high\"]\r\n    }\r\n  }\r\n];\r\n\r\n// Price tier thresholds\r\nexport const PRICE_TIER_THRESHOLDS = {\r\n  BUDGET: 0.5,\r\n  STANDARD: 1.5,\r\n  PREMIUM: 2.5,\r\n  LUXURY: Infinity\r\n} as const;\r\n\r\n// Video model categories\r\nexport const VIDEO_MODEL_CATEGORIES = {\r\n  TEXT_TO_VIDEO: \"text_to_video\",\r\n  IMAGE_TO_VIDEO: \"image_to_video\",\r\n  VIDEO_TO_VIDEO: \"video_to_video\"\r\n} as const;\r\n\r\n// Price tiers\r\nexport const PRICE_TIERS = {\r\n  BUDGET: \"budget\",\r\n  STANDARD: \"standard\",\r\n  PREMIUM: \"premium\",\r\n  LUXURY: \"luxury\"\r\n} as const;\r\n\r\n/**\r\n * Determine price tier based on price per second\r\n */\r\nexport function getPriceTier(pricePerSecond: number): keyof typeof PRICE_TIERS {\r\n  if (pricePerSecond <= PRICE_TIER_THRESHOLDS.BUDGET) return \"BUDGET\";\r\n  if (pricePerSecond <= PRICE_TIER_THRESHOLDS.STANDARD) return \"STANDARD\";\r\n  if (pricePerSecond <= PRICE_TIER_THRESHOLDS.PREMIUM) return \"PREMIUM\";\r\n  return \"LUXURY\";\r\n}\r\n\r\n/**\r\n * Determine category from model name\r\n */\r\nexport function getModelCategory(modelName: string): keyof typeof VIDEO_MODEL_CATEGORIES {\r\n  const name = modelName.toLowerCase();\r\n  \r\n  if (name.includes(\"image-to-video\") || name.includes(\"veo\") || name.includes(\"kling\")) {\r\n    return \"IMAGE_TO_VIDEO\";\r\n  } else if (name.includes(\"lip-sync\") || name.includes(\"video-to-video\")) {\r\n    return \"VIDEO_TO_VIDEO\";\r\n  }\r\n  \r\n  return \"TEXT_TO_VIDEO\";\r\n}\r\n\r\n/**\r\n * Get default video model by category\r\n */\r\nexport function getDefaultVideoModelByCategory(category: keyof typeof VIDEO_MODEL_CATEGORIES): VideoModel | undefined {\r\n  return DEFAULT_VIDEO_MODELS.find(model => \r\n    getModelCategory(model.name) === category\r\n  );\r\n}\r\n\r\n/**\r\n * Get video models by price tier\r\n */\r\nexport function getVideoModelsByPriceTier(models: VideoModel[], tier: keyof typeof PRICE_TIERS): VideoModel[] {\r\n  return models.filter(model => {\r\n    const price = model.params?.price_per_second || 0;\r\n    return getPriceTier(price) === tier;\r\n  });\r\n}\r\n\r\n/**\r\n * Get video models by category\r\n */\r\nexport function getVideoModelsByCategory(models: VideoModel[], category: keyof typeof VIDEO_MODEL_CATEGORIES): VideoModel[] {\r\n  return models.filter(model => getModelCategory(model.name) === category);\r\n}\r\n","// Media settings factory constants and types\r\n\r\nexport interface MediaSettingsOption {\r\n  id: string;\r\n  label: string;\r\n  description: string;\r\n  value: string;\r\n  category?: string;\r\n  tags?: string[];\r\n}\r\n\r\nexport interface ImageGenerationConfig {\r\n  availableModels: MediaSettingsOption[];\r\n  availableResolutions: MediaSettingsOption[];\r\n  availableStyles: MediaSettingsOption[];\r\n  availableShotSizes: MediaSettingsOption[];\r\n  supportedFormats: string[];\r\n  maxBatchSize: number;\r\n  qualityOptions: MediaSettingsOption[];\r\n  defaultSettings: {\r\n    model: string;\r\n    resolution: string;\r\n    style: string;\r\n    shotSize: string;\r\n  };\r\n}\r\n\r\nexport interface VideoGenerationConfig {\r\n  availableModels: MediaSettingsOption[];\r\n  availableResolutions: MediaSettingsOption[];\r\n  availableStyles: MediaSettingsOption[];\r\n  availableShotSizes: MediaSettingsOption[];\r\n  supportedDurations: number[];\r\n  supportedFps: number[];\r\n  maxDuration: number;\r\n  qualityPresets: MediaSettingsOption[];\r\n  defaultSettings: {\r\n    model: string;\r\n    resolution: string;\r\n    style: string;\r\n    shotSize: string;\r\n    duration: number;\r\n    fps: number;\r\n  };\r\n}\r\n\r\nexport interface IGenerationConfigRead {\r\n  name: string;\r\n  type: string;\r\n  source: string;\r\n  params?: {\r\n    workflow_path?: string;\r\n    price?: number;\r\n    max_duration?: number;\r\n    max_resolution?: { width: number; height: number };\r\n    supported_frame_rates?: number[];\r\n    supported_aspect_ratios?: string[];\r\n    supported_qualities?: string[];\r\n  };\r\n}\r\n\r\n// Shot size enum\r\nexport enum ShotSizeEnum {\r\n  EXTREME_LONG_SHOT = \"extreme_long_shot\",\r\n  LONG_SHOT = \"long_shot\",\r\n  MEDIUM_SHOT = \"medium_shot\",\r\n  CLOSE_UP = \"close_up\",\r\n  EXTREME_CLOSE_UP = \"extreme_close_up\",\r\n  TWO_SHOT = \"two_shot\",\r\n  OVER_THE_SHOULDER = \"over_the_shoulder\",\r\n  POINT_OF_VIEW = \"point_of_view\"\r\n}\r\n\r\n// Default image generation configuration\r\nexport const DEFAULT_IMAGE_CONFIG: ImageGenerationConfig = {\r\n  availableModels: [\r\n    { id: \"comfyui/flux\", label: \"FLUX Pro\", description: \"High-quality image generation\", value: \"comfyui/flux\", category: \"pro\" },\r\n    { id: \"comfyui/flux-dev\", label: \"FLUX Dev\", description: \"Development version\", value: \"comfyui/flux-dev\", category: \"dev\" },\r\n    { id: \"comfyui/sdxl\", label: \"SDXL\", description: \"Stable Diffusion XL\", value: \"comfyui/sdxl\", category: \"standard\" }\r\n  ],\r\n  availableResolutions: [\r\n    { id: \"1024x1024\", label: \"1024x1024\", description: \"Square HD\", value: \"1024x1024\" },\r\n    { id: \"1920x1080\", label: \"1920x1080\", description: \"Full HD\", value: \"1920x1080\" },\r\n    { id: \"1080x1920\", label: \"1080x1920\", description: \"Portrait HD\", value: \"1080x1920\" }\r\n  ],\r\n  availableStyles: [\r\n    { id: \"realistic\", label: \"Realistic\", description: \"Photorealistic style\", value: \"realistic\" },\r\n    { id: \"cinematic\", label: \"Cinematic\", description: \"Movie-like style\", value: \"cinematic\" },\r\n    { id: \"anime\", label: \"Anime\", description: \"Japanese animation style\", value: \"anime\" }\r\n  ],\r\n  availableShotSizes: [\r\n    { id: \"close-up\", label: \"Close-up\", description: \"Tight framing\", value: \"close-up\" },\r\n    { id: \"medium-shot\", label: \"Medium Shot\", description: \"Balanced framing\", value: \"medium-shot\" },\r\n    { id: \"long-shot\", label: \"Long Shot\", description: \"Wide framing\", value: \"long-shot\" }\r\n  ],\r\n  supportedFormats: [\"PNG\", \"JPEG\", \"WEBP\"],\r\n  maxBatchSize: 3,\r\n  qualityOptions: [\r\n    { id: \"standard\", label: \"Standard\", description: \"Good quality, fast generation\", value: \"standard\" },\r\n    { id: \"high\", label: \"High\", description: \"Better quality, slower generation\", value: \"high\" }\r\n  ],\r\n  defaultSettings: {\r\n    model: \"comfyui/flux\",\r\n    resolution: \"1024x1024\",\r\n    style: \"realistic\",\r\n    shotSize: \"medium-shot\"\r\n  }\r\n};\r\n\r\n// Default video generation configuration\r\nexport const DEFAULT_VIDEO_GENERATION_CONFIG: VideoGenerationConfig = {\r\n  availableModels: [\r\n    { id: \"comfyui/ltx\", label: \"LTX Video\", description: \"Text to video generation\", value: \"comfyui/ltx\", category: \"text_to_video\" },\r\n    { id: \"comfyui/veo3\", label: \"VEO3 Video\", description: \"Image to video generation\", value: \"comfyui/veo3\", category: \"image_to_video\" },\r\n    { id: \"comfyui/kling\", label: \"KLING Video\", description: \"Advanced video generation\", value: \"comfyui/kling\", category: \"image_to_video\" }\r\n  ],\r\n  availableResolutions: [\r\n    { id: \"1344x768\", label: \"1344x768\", description: \"HD Widescreen\", value: \"1344x768\" },\r\n    { id: \"1024x1024\", label: \"1024x1024\", description: \"Square HD\", value: \"1024x1024\" },\r\n    { id: \"768x1344\", label: \"768x1344\", description: \"Portrait HD\", value: \"768x1344\" }\r\n  ],\r\n  availableStyles: [\r\n    { id: \"realistic\", label: \"Realistic\", description: \"Photorealistic style\", value: \"realistic\" },\r\n    { id: \"cinematic\", label: \"Cinematic\", description: \"Movie-like style\", value: \"cinematic\" },\r\n    { id: \"anime\", label: \"Anime\", description: \"Japanese animation style\", value: \"anime\" }\r\n  ],\r\n  availableShotSizes: [\r\n    { id: \"close-up\", label: \"Close-up\", description: \"Tight framing\", value: \"close-up\" },\r\n    { id: \"medium-shot\", label: \"Medium Shot\", description: \"Balanced framing\", value: \"medium-shot\" },\r\n    { id: \"long-shot\", label: \"Long Shot\", description: \"Wide framing\", value: \"long-shot\" }\r\n  ],\r\n  supportedDurations: [5, 10, 15, 20, 30, 45, 60],\r\n  supportedFps: [24, 30, 60],\r\n  maxDuration: 60,\r\n  qualityPresets: [\r\n    { id: \"standard\", label: \"Standard\", description: \"Good quality, fast generation\", value: \"standard\" },\r\n    { id: \"high\", label: \"High\", description: \"Better quality, slower generation\", value: \"high\" }\r\n  ],\r\n  defaultSettings: {\r\n    model: \"comfyui/ltx\",\r\n    resolution: \"1344x768\",\r\n    style: \"realistic\",\r\n    shotSize: \"medium-shot\",\r\n    duration: 5,\r\n    fps: 24\r\n  }\r\n};\r\n\r\n// Cache configuration\r\nexport const CACHE_CONFIG = {\r\n  DURATION: 60 * 60 * 1000, // 1 hour\r\n  IMAGE_CONFIG_KEY: \"image_config_cache\",\r\n  VIDEO_CONFIG_KEY: \"video_config_cache\"\r\n} as const;\r\n\r\n// Priority fallback models\r\nexport const PRIORITY_MODELS = {\r\n  IMAGE: [\"comfyui/flux\", \"comfyui/sdxl\", \"flux-dev\", \"sdxl\"],\r\n  VIDEO: [\"comfyui/ltx\", \"comfyui/veo3\", \"comfyui/kling\"]\r\n} as const;\r\n\r\n/**\r\n * Adapter function to convert OpenAPI model to MediaSettings format\r\n */\r\nexport function adaptModelForMediaSettings(\r\n  model: IGenerationConfigRead\r\n): IGenerationConfigRead & {\r\n  id: string;\r\n  label: string;\r\n  description: string;\r\n  value: string;\r\n  workflowPath: string;\r\n  price: number;\r\n} {\r\n  return {\r\n    ...model,\r\n    id: model.name, // Use name as id for compatibility\r\n    label: model.name, // Use name as label for display\r\n    description: `${model.type} - ${model.source}`,\r\n    value: model.name,\r\n    workflowPath: model.params?.workflow_path || \"\",\r\n    price: model.params?.price || 0,\r\n  };\r\n}\r\n\r\n/**\r\n * Get default model by priority\r\n */\r\nexport function getDefaultModelByPriority(\r\n  models: IGenerationConfigRead[],\r\n  priorityList: string[]\r\n): IGenerationConfigRead | undefined {\r\n  for (const modelName of priorityList) {\r\n    const model = models.find((m) => m.name === modelName);\r\n    if (model) return model;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Validate media settings configuration\r\n */\r\nexport function validateMediaSettingsConfig(config: ImageGenerationConfig | VideoGenerationConfig): boolean {\r\n  return !!(\r\n    config.availableModels?.length > 0 &&\r\n    config.availableResolutions?.length > 0 &&\r\n    config.availableStyles?.length > 0 &&\r\n    config.availableShotSizes?.length > 0\r\n  );\r\n}\r\n","// Validation utilities\r\n\r\nimport { z } from 'zod';\r\n\r\nexport const emailSchema = z.string().email();\r\nexport const urlSchema = z.string().url();\r\n\r\nexport function isValidEmail(email: string): boolean {\r\n  try {\r\n    emailSchema.parse(email);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isValidUrl(url: string): boolean {\r\n  try {\r\n    urlSchema.parse(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function validateFileSize(size: number, maxSize: number): boolean {\r\n  return size <= maxSize;\r\n}\r\n\r\nexport function validateFileType(type: string, allowedTypes: string[]): boolean {\r\n  return allowedTypes.includes(type);\r\n}\r\n\r\n\r\n","// Formatting utilities\r\n\r\nexport function formatFileSize(bytes: number): string {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n  return date.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n}\r\n\r\nexport function formatDateTime(date: Date): string {\r\n  return date.toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n}\r\n\r\n\r\n","// File utilities\r\n\r\nexport function getFileExtension(filename: string): string {\r\n  return filename.split('.').pop()?.toLowerCase() || '';\r\n}\r\n\r\nexport function getFileNameWithoutExtension(filename: string): string {\r\n  return filename.replace(/\\.[^/.]+$/, '');\r\n}\r\n\r\nexport function isImageFile(filename: string): boolean {\r\n  const ext = getFileExtension(filename);\r\n  return ['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(ext);\r\n}\r\n\r\nexport function isVideoFile(filename: string): boolean {\r\n  const ext = getFileExtension(filename);\r\n  return ['mp4', 'mov', 'avi', 'mkv', 'webm'].includes(ext);\r\n}\r\n\r\n\r\n"],"mappings":"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","names":["ShotSizeEnum"]}